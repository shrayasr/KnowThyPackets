{"$schema": "https://c3voc.de/schedule/schema.json", "generator": {"name": "pretalx", "version": "2024.3.1"}, "schedule": {"url": "https://cfp.in.pycon.org/2025/schedule/", "version": "0.15", "base_url": "https://cfp.in.pycon.org", "conference": {"acronym": "2025", "title": "PyCon India 2025", "start": "2025-09-12", "end": "2025-09-15", "daysCount": 4, "timeslot_duration": "00:05", "time_zone_name": "Asia/Kolkata", "colors": {"primary": "#3e63f5"}, "rooms": [{"name": "Track 1", "guid": "2e0618a7-7c55-5cd9-a481-bb62ccfa7240", "description": null, "capacity": 500}, {"name": "Track 2", "guid": "8d4e062d-e913-5f19-b4b8-1f3cc76c2c48", "description": null, "capacity": 300}, {"name": "Track 3", "guid": "1e6b8b52-00d2-55c2-9dac-c8eaaba95bdd", "description": null, "capacity": null}, {"name": "Room 1", "guid": "85639f60-7adc-5b87-8881-c938b0815d3d", "description": null, "capacity": 50}, {"name": "Room 2", "guid": "1af317c8-5b77-56b1-bc42-4e8c1965fa06", "description": null, "capacity": 50}, {"name": "Room 3", "guid": "43a09d4d-5df4-56a9-87c7-15241d353ef0", "description": null, "capacity": 50}, {"name": "Room 4", "guid": "945d076d-fb59-51a6-93a8-6bf4866ae039", "description": null, "capacity": 50}, {"name": "Room 5", "guid": "d86f556d-e9f3-5515-a7e3-d13838ebfe22", "description": null, "capacity": 50}, {"name": "Room 6", "guid": "4316eb69-c8e4-5b38-93c9-a5b0ce54e898", "description": null, "capacity": 50}, {"name": "Room 7", "guid": "e88fa541-33b5-5091-93cb-78b7f77a1097", "description": null, "capacity": 50}], "tracks": [{"name": "Python Core, Performance", "color": "#666666"}, {"name": "AI, ML, Data Science", "color": "#007bff"}, {"name": "Python for Cloud, DevOps, Infrastructure", "color": "#33cc33"}, {"name": "Web, Desktop and Full-Stack Development", "color": "#ff69b4"}, {"name": "Python for Hardware, Edge Computing, IoT", "color": "#8e44ad"}, {"name": "Python in Research and Education", "color": "#ffc107"}, {"name": "Community", "color": "#e67e73"}, {"name": "Others", "color": "#95a5a6"}], "days": [{"index": 1, "date": "2025-09-12", "day_start": "2025-09-12T04:00:00+05:30", "day_end": "2025-09-13T03:59:00+05:30", "rooms": {"Room 1": [{"url": "https://cfp.in.pycon.org/2025/talk/9VDUVG/", "id": 219, "guid": "e3afc347-df76-5a58-8acf-56c449708e18", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 1", "slug": "2025-219-programming-is-playtime", "title": "Programming is Playtime", "subtitle": "", "track": "Python Core, Performance", "type": "Workshop", "language": "en", "abstract": "Why should coding always be about serious, big topics? Programming should be fun, it should be about trying out random things and learning new concepts in the process. In this workshop, we will work on Coding Katas -- these are small programs designed for us to learn and practise a skillset.\r\n\r\nHere are the problems we will work on.\r\n\r\n1. FizzBuzz: Think FizzBuzz is only suitable for asking freshers as interview question? Try it with a twist -- without using 'for' or 'while' statements.\r\n2. Snakes and Ladders: We all played it as children. Can we now code it -- but no function more than five lines and none of the functions should return any value\r\n3. Card Counting: Given a hand of cards, sum up the value of the hand -- but beware, some cards can have multiple possible values\r\n\r\nBy the end of the session, you would have learnt some cool programming concepts -- generators, streams, continuations, monads and more!\r\n\r\nReady to level up your programming? Come and join us!", "description": "In this session, we will work through three coding challenges.\r\n\r\nThe overall flow will go like this:\r\n\r\n1. 5 mins introduction to the problem\r\n2. 20 mins discuss with others on your table and implement a solution\r\n3. 20 mins walkthrough the solution\r\n4. 10 mins Q & A\r\n5. 5 mins break\r\n\r\nThis pattern will repeat for each of the three problems that we will solve.\r\n\r\nThe workshop is suitable for those who are ready to step into intermediate level python programming. We will discuss slightly more complicated python features like generators, functional programming, structural pattern matching and so on.\r\n\r\nThis is a completely hands-on workshop. Please ensure you have a laptop and it has Python 3.10+ installed before coming to the workshop.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "ce559824-c582-5052-9757-2380092c4508", "id": 195, "code": "9NMLQU", "public_name": "Siddharta G", "avatar": null, "biography": "Hi .\ud83d\udc4b\ud83c\udffe I'm Siddharta, a Python developer and trainer.\r\n\r\nI first encountered python in 2002, and it has remained my favourite programming language ever since. I have been a speaker at PyCon India in 2009, 2011 and 2024,. I am the author of the book \"Test-Driven Python Development\" published by Packt in 2015.\r\n\r\nToday I run the site https://www.playfulpython.com/ where I write about Python topics.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/KEHPN3/", "id": 276, "guid": "76c75d90-5d9a-523b-a9f2-21bf0872e3cc", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 1", "slug": "2025-276-experience-the-frappe-framework", "title": "Experience the Frappe Framework", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Workshop", "language": "en", "abstract": "The [Frappe Framework](https://frappe.io/framework) is a full-stack web framework written in Python and JavaScript. It is batteries included, reducing the effort needed to build your next CRUD  or back-office system. It is metadata-driven and provides a low-code interface,  enabling you to make quick progress on your web apps.\r\n\r\nIn this workshop, we will explore the Frappe Framework and build a web app. We will wrap up the session with a brief overview of the advanced functionality available in the Frappe Framework e.g. built-in user and role management system, customizable forms and views.", "description": "Let's build a simple event management web application using the Frappe Framework. Through the workshop we will\r\n\r\n* understand what a [DocType](https://docs.frappe.io/framework/user/en/tutorial/create-a-doctype) is, the fundamental building block of the Framework apps\r\n* define DocTypes for various objects needed for our web app e.g. Event, Registration, Proposal\r\n* create Jinja templates to [view the documents](https://docs.frappe.io/framework/user/en/tutorial/portal-pages) corresponding to the DocType e.g. a public Event page\r\n* understand what it means to be \"metadata-driven\" in the Framework\r\n* accept user information using forms and [customize form behavior](https://docs.frappe.io/framework/user/en/tutorial/form-scripts) using server-side or client-side JavaScript\r\n\r\nIn addition, we will briefly explore the [REST API](https://docs.frappe.io/framework/user/en/guides/integration/rest_api) provided by the Framework, how [Frappe-UI](https://ui.frappe.io/) can be used to build frontend apps, and understand the [built-in user and role management system](https://docs.frappe.io/framework/user/en/basics/users-and-permissions).", "recording_license": "", "do_not_record": false, "persons": [{"guid": "370bcaca-c079-5f3c-a981-0937ef82d948", "id": 234, "code": "3GFU8Z", "public_name": "Poruri Sai Rahul", "avatar": null, "biography": "Rahul is a Learning & Development consultant to Tiger Analytics. Prior to this, he worked as a Scientific Software Developer at [Enthought](https://www.enthought.com) for close to eight years, across the world. While at Enthought, he contributed to and [maintained several packages](https://pypi.org/user/rporuri/) in the Scientific Python ecosystem.\r\n\r\nHe is [seasoned speaker](http://rahulporuri.github.io/talks) - including a workshop on Python packages at [PyCon India 2017](https://in.pycon.org/2017/#schedule) and a talk on PEPs and Technical Writing at [PyConf Hyd 2025](https://2025.pyconfhyd.org/).", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 2": [{"url": "https://cfp.in.pycon.org/2025/talk/YPSPGS/", "id": 85, "guid": "dfe2cd55-a307-560c-adab-b34d6ac62493", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 2", "slug": "2025-85-workshop-building-modern-ci-pipelines-in-python", "title": "Workshop: Building Modern CI Pipelines in Python", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Workshop", "language": "en", "abstract": "CI is no longer a simple chain of shell commands. In modern, polyglot organizations, CI workflows must be modular, reusable, and capable of interoperating across multiple languages and teams. Yet many teams still default to YAML or brittle bash scripts, especially in Python projects.\r\n\r\nWhat if you could ditch the YAML and write your pipelines in pure, testable, idiomatic Python? \r\n\r\nThis hands-on workshop will explore how to build modular, language-agnostic CI pipelines in Python using Dagger, an open source runtime created by the founders of Docker that treats pipelines as code.\r\n\r\nYou\u2019ll learn how to:\r\n- Build CI pipelines using Python (no more YAML!)\r\n- Reuse logic across teams and projects with Dagger modules\r\n- Seamlessly integrate Go, TypeScript, and other languages into Python pipelines\r\n\r\nWhether you're writing CI for your next Flask app or scaling a CI platform for a large engineering org, Dagger can unlock a smoother CI experience.", "description": "## Audience\r\n\r\nThis workshop is for:\r\n- Python developers who want better control over their CI/CD workflows\r\n- DevOps/SRE engineers working in polyglot or monorepo environments\r\n- Engineering teams tired of CI YAML fatigue and Bash script burnout\r\n\r\n## Prerequisites\r\n- Basic Python experience. No prior CI/CD or Dagger knowledge required.\r\n- A laptop with IDE, Docker and the Dagger CLI installed.\r\n- A GitHub account\r\n\r\n## What you will learn:\r\n\r\n- Why Python is a great fit for modern CI pipeline development\r\n- How to use Dagger's Python SDK to write, run, and test pipelines\r\n- How to compose Python pipelines with other language modules (Go, TypeScript, etc.)\r\n- How to refactor brittle CI scripts into clean, reusable Python components\r\n- How to run Daggerized pipelines written in Python locally and in CI\r\n\r\n## Workshop agenda\r\n\r\n### Dagger Introduction (15 minutes)\r\n- Review common challenges in CI today\r\n- Explore how Dagger's design elegantly solves these challenges\r\n- Understand Dagger\u2019s role in modern, polyglot development environments and teams\r\n\r\n### Understand the Example Project (15 minutes)\r\n- Clone an example application codebase from GitHub\r\n- Examine the existing Dockerfile to understand the current build process\r\n- Examine the existing GitHub Actions workflow to understand how the pipeline works in CI\r\n\r\n### Dagger CLI and Dagger Cloud (10 minutes)\r\n- Explore the Dagger CLI, your primary interface to Dagger in this workshop\r\n- Understand Dagger Cloud\r\n\r\n### Create a Simple Dagger Module (20 minutes)\r\n- Create a Dagger module for a basic task.\r\n- Understand module structure and how to use it\r\n- Run a Dagger function and trace it using the terminal and Dagger Cloud\r\n\r\n### Daggerize the Pipeline! (40 minutes)\r\n- Daggerize! Convert the Dockerfile to a Dagger pipeline\r\n\r\n### Run the Dagger Pipeline Locally (10 minutes)\r\n- Run the Dagger pipeline locally and trace its execution\r\n- Run it again to see Dagger caching in action\r\n- Understand how caching in Dagger speeds up subsequent builds\r\n\r\n### Transfer and run the Dagger Pipeline in CI (20 minutes)\r\n- Modify the GitHub Actions workflow to use the Dagger pipeline\r\n- Run the pipeline in the GitHub Actions CI environment \r\n- Understand how Dagger eliminates vendor lock-in and CI switching costs\r\n\r\n### Add AI to the Mix (30 minutes)\r\n- Examine Dagger's AI bindings\r\n- See an example of integrating AI to analyse pipeline failures\r\n\r\n### Summary and Q&A (15 minutes)\r\n- Recap of Dagger's key features and benefits for CI/CD\r\n- Q&A\r\n\r\n### Key takeaways:\r\n\r\nAfter this workshop, attendees will be able to:\r\n- Write modern, reproducible and portable CI workflows in Python\r\n- Replace static YAML with testable, version-controlled code\r\n- Collaborate more effectively with teams using different stacks\r\n- Use Dagger to future-proof their CI strategy\r\n\r\n### Useful links\r\n\r\n- [Dagger](https://dagger.io)\r\n- [Dagger Discord](https://discord.gg/dagger-io)", "recording_license": "", "do_not_record": false, "persons": [{"guid": "dc59bd46-67b6-560c-81cc-a1f94dd4a3fc", "id": 77, "code": "QCGFCL", "public_name": "Vikram Vaswani", "avatar": null, "biography": "Vikram Vaswani is an open source developer and technical author with 22+ years of experience. He has written seven books on open source software and database programming for McGraw-Hill and Pearson. He is also well-versed in open source product management, product marketing and community management.\r\n\r\nGitHub: https://github.com/vvaswani\r\nLinkedIn: https://www.linkedin.com/in/vvaswani/\r\nWebsite: https://vikram-vaswani.in", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/VRB3MX/", "id": 225, "guid": "7ec41709-7b19-543e-933d-a40c5b5486ca", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 2", "slug": "2025-225-unlocking-the-power-of-vibe-coding-with-mcp-servers-a-hands-on-guide", "title": "Unlocking the Power of Vibe Coding with MCP Servers: A Hands-On Guide", "subtitle": "", "track": "AI, ML, Data Science", "type": "Workshop", "language": "en", "abstract": "What if you could take your AI from just chatting and writing to actually doing stuff? Like, real-world tasks. Well, buckle up because the Model Context Protocol (MCP) is here to turn your language models into action heroes! \r\nImagine this: You\u2019ve got an AI, but it\u2019s not just answering your questions. It\u2019s querying databases, fetching real-time data (like live Airbnb listings!), saving files, and even running custom tasks\u2014all thanks to MCP.\r\nThis workshop will teach one how to enhance development workflow by integrating Model Context Protocol (MCP) servers with external data sources. Attendees will learn to automate tasks, store context in vector databases, and fetch meaningful context from external services like Google Drive and Airbnb to boost their development productivity. We'll provide a hands-on experience with MCP servers and show how they enable seamless interactions between AI models and external systems, making workflows faster and more efficient.", "description": "In this hands-on workshop, we\u2019ll go beyond theory and build a real AI agent setup using MCP \u2013 Model Context Protocol \u2013 to create an extensible, plug-and-play ecosystem between LLMs and APIs.\r\nWe\u2019ll start with the basics: setting up Claude Desktop or Cursor IDE, wiring up an MCP server (Qdrant) to persist generated code, and then extending the system with a second tool (e.g., Airbnb search or Google Maps). Along the way, we'll cover:\r\n* How MCP clients and servers interact\r\n* STDIO and Server-Sent Events transport layers\r\n* Writing and running multi-server configs in JSON\r\n* Saving & retrieving LLM responses via Qdrant vector DB (RAG)\r\n* Building custom tools to expose your own APIs to the LLM\r\nThis is \"vibe coding\" in action \u2013 collaborative, contextual, intelligent development where your model remembers, learns, and integrates seamlessly.\r\nWorkshop Agenda:\r\n1. Introduction to MCP Servers (15 minutes)\r\n* Overview of MCP: What is Model Context Protocol (MCP)? Why is it important for modern development workflows?\r\n* Key Components of MCP:\r\n    * Client, Server, Transport Layer, and Protocol.\r\n    * How these components work together for enhanced model context and interaction.\r\n* Real-world Use Cases: Discuss how MCP can help in common scenarios like task automation, integrating databases, and fetching external data.\r\n2. Setting Up and Configuring MCP Servers (25 minutes)\r\n* Demo of MCP Server Setup:\r\n    * Walk through how to set up an MCP server with an example like Qdrant (a vector database).\r\n    * Hands-on Activity: Attendees will follow along to configure their own MCP server using a JSON configuration file.\r\n* Integrating External Services: How to connect MCP with Google Drive, Dropbox, or other cloud-based services to fetch/store data.\r\n* Structuring JSON Files: Best practices for writing a well-organized MCP configuration that supports multiple servers.\r\n3. Building a Real-World Use Case: Automating Tasks with MCP (30 minutes)\r\n* Example Use Case: Build an agent using MCP to automate tasks and store/retrieve data using a vector database like Qdrant.\r\n* Hands-on Activity:\r\n    * Attendees will use MCP to integrate services like Airbnb and Qdrant, automating repetitive tasks and generating context-aware responses.\r\n    * Example tasks: Automating fetching and storing data related to vacation rentals and previous code templates.\r\n* Vibe Coding in Action: How MCP servers can enhance Vibe coding by enabling seamless task execution and context retrieval for future coding sessions.\r\n4. Best Practices for Optimizing MCP Workflow (20 minutes)\r\n* Optimizing Transport Layers: Discuss tips on enhancing the speed and reliability of communication between servers and clients.\r\n* Troubleshooting Common Issues: How to handle errors, debug MCP server setups, and optimize your workflow.\r\n* Structure and Efficiency: How to organize your JSON files and handle multiple servers in a single file for better scalability.\r\n5. Q&A and Open Discussion (20 minutes)\r\n* Open the floor for attendees to ask questions, provide feedback, and share experiences.\r\n\r\nBy the end of this workshop, participants will:\r\n1. Understand the fundamental concepts of MCP and how it works.\r\n2. Gain hands-on experience with setting up and configuring MCP servers.\r\n3. Learn how to integrate vector databases and external APIs into their workflow using MCP.\r\n4. Automate tasks and retrieve meaningful context for more efficient coding using MCP.\r\n5. Implement best practices for managing and optimizing MCP workflows.\r\n* A fully working MCP setup with Qdrant + Claude\r\n* A personalized AI coding assistant that remembers your code patterns\r\n* Enough knowledge to build and expose your own APIs via MCP", "recording_license": "", "do_not_record": false, "persons": [{"guid": "8e69f5dd-da8f-5b82-b6c3-4daec8b34d99", "id": 97, "code": "VWFDVU", "public_name": "Hemangi Karchalkar", "avatar": null, "biography": "Hemangi Karchalkar is a senior software engineer at EPAM Systems. Passionate about clean architecture and teaching, she has mentored several folks on modern Python stack practices.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 3": [{"url": "https://cfp.in.pycon.org/2025/talk/LHLX8U/", "id": 270, "guid": "11458195-3058-5460-ae39-885659de57f8", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 3", "slug": "2025-270-fastapi-for-production-patterns-and-architecture-in-practice", "title": "FastAPI for Production: Patterns and Architecture in Practice", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Workshop", "language": "en", "abstract": "FastAPI is deceptively simple at first glance, but developers often get stuck beyond \u201cjust works\u201d to real-world, maintainable production systems.\r\n\r\nThis hands-on workshop dives deep into design patterns, architectural best practices, and real-world project structure that help you confidently ship and scale FastAPI applications. We'll explore patterns like Dependency Injection, Routing strategies, DTOs vs Pydantic models, Creational and Structural patterns, power of middlewares, Hexagonal Architecture, Service Layer separation, Common reusable modular code that adapts to API, testing strategies and much more.\r\n\r\nThrough a series of guided examples and exercises, participants will walk away with a practical blueprint for designing clean, testable, and maintainable APIs.", "description": "### Outline\r\n#### 1. Foundations Recap (15 mins)\r\nFastAPI basics: routing, models, DI, responses\r\nSetting up a project structure (domain/app separation)\r\n\r\n#### 2. Layered Architecture (30 mins)\r\nService Layer Pattern\r\nRepositories & use-cases\r\nKeeping endpoints thin and services smart\r\nCreate modular reusable services\r\n\r\nExercise: Refactor a monolithic API to use services and repositories\r\n\r\n#### 3. Schema Design Patterns (20 mins)\r\nDTOs vs Pydantic Models\r\nUsing inheritance, aliasing, and nesting\r\nValidators and custom error messages\r\n\r\nExercise: Add multiple schemas for Create, Read, and Update with validation\r\nCreate modular reusable schemas\r\n\r\n#### 4. Dependency Injection & Lifespan (20 mins)\r\nCustom dependencies\r\nWhen to use Depends()\r\nStartup/shutdown events, database sessions\r\n\r\nExercise: Inject services and DB connections, services, configs in a clean, reusable way\r\n\r\n\r\n#### 5. Routing & Modular Patterns (20 mins)\r\n\r\nRouter grouping, nested routes and Custom Routers\r\nVersioning and route prefixing\r\nBreaking apps into feature modules\r\nExercise: Create a modular route layout with grouped routers\r\n\r\n#### 6. Production Patterns (30 mins)\r\nCustom exception handling\r\nLogging and observability tips\r\nBackground tasks and event hooks\r\n\r\nMiddlewares\r\nExercise: Add custom error responses and log request lifecycle\r\n\r\n#### 7. Testing and Maintainability (15 mins)\r\n\r\n#### 8. Test services and routes\r\nUse pytest, mock dependencies, isolate layers\r\nExercise: Write tests for services and route validation", "recording_license": "", "do_not_record": false, "persons": [{"guid": "b21226c5-bb03-52f1-b1f5-a82049caccbd", "id": 228, "code": "HNKYMS", "public_name": "Vivek Keshore", "avatar": null, "biography": "I am a Python Enthusiast who loves building software applications and education related content. I am a technology professional and a passionate programmer with 12 years of experience in Python & Python related technologies. I am currently working as Software Architect at EPAM India.\r\n\r\nI have been involved with multiple professional projects in various industrial domains and technical fields. My expertise is in application development, data processing & analysis, data pipelines, non-relational and relational databases, Python, FastAPI, Flask, Celery, Redis, AWS, Airflow, GreatExpectations, Docker, and various other tech stacks. I am also an open source contributor, and published self developed libraries on PyPI. I love creating libraries and various utility tools that help me in solving a challenge/problem that could also be used by others in the developers community.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/LY9J73/", "id": 126, "guid": "4214ce9c-c567-5f2f-8958-555007b234f0", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 3", "slug": "2025-126-depths-of-python-an-advanced-python-workshop", "title": "Depths of Python: An Advanced Python Workshop", "subtitle": "", "track": "Python Core, Performance", "type": "Workshop", "language": "en", "abstract": "This workshop aims to illuminate Python's beautiful features, which become apparent only when building complex interfaces or meta systems. This workshop is designed for beginners and students who knows how to write plain scripts but gets stuck when want to work on larger programs and libraries\r\n\r\nUnlike other workshops, we will draw real-life examples and deconstruct them so that we build intuition. For example, to learn decorators, the best example is a logger, but a real-life example is `@app.get` from Flask.\r\n\r\nBy the end of the workshop, the participants will get an intuitive understanding and know how to use advanced features of Python, like decorators, context managers, metaclasses etc.,", "description": "The workshop starts with a Low-level design problem. For example, how will you design a parking system? What do you need? A bunch of classes to represent this world. How would you give these classes functionalities? There are two ways to go about it: the logical way, giving meaning to the classes via functions, or the Pythonic way, using Python constructs to give classes superpowers.\r\n\r\nThese superpowers include\r\n\r\n1. Python's Data Model\r\n2. Memory References \r\n3. Namespaces\r\n4. Advanced Functions\r\n5. Decorators\r\n6. Context-Managers\r\n7. Advanced classes\r\n\r\nBy the end of the workshop the attendees will know What the feature of Python is, does and how to use them in real-world examples", "recording_license": "", "do_not_record": false, "persons": [{"guid": "1e9e2796-7d3b-5e0d-909e-77307c64c3e4", "id": 108, "code": "GWSCQL", "public_name": "Bhavani Ravi", "avatar": null, "biography": null, "answers": []}, {"guid": "c07d4b0f-808d-5b20-a1fa-02c93090b379", "id": 109, "code": "JZ8DUD", "public_name": "Shiny S U", "avatar": null, "biography": "With over 13 years of experience in product development and agile software engineering, I specialize in building scalable backend systems and leading high-impact teams. I've worked across diverse roles including Backend Engineer, Engineering Lead and Agile coach, bringing together technical excellence and people-centric leadership. Passionate about Python and open-source, I enjoy sharing practical insights on backend architecture, workflow automation, and developer productivity.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 4": [{"url": "https://cfp.in.pycon.org/2025/talk/7SBLGV/", "id": 133, "guid": "46c3590b-6a50-5bdf-a14a-525db46fa474", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 4", "slug": "2025-133-dating-dining-and-doomscrolling-the-algorithms-behind-modern-choice", "title": "Dating, Dining, and Doomscrolling: The Algorithms Behind Modern Choice", "subtitle": "", "track": "AI, ML, Data Science", "type": "Workshop", "language": "en", "abstract": "## Abstract\r\nRecommendation systems are no longer just about suggesting the next movie, they now shape everything from what we eat and wear to who we date, what we watch, and even what we believe. In this hands-on workshop, we\u2019ll explore the powerful systems behind these \u201cinvisible puppeteers\u201d of modern digital life.\r\n\r\nYou\u2019ll learn not just how recommendation systems work, but how they shape your choices, reinforce (or challenge) your biases, and how companies fine-tune them to maximize retention, revenue, and engagement. We\u2019ll build and break down a recommendation pipeline from retrieval to ranking and dive into production challenges, optimization tricks, and the ethical trade-offs involved.\r\n\r\nWe\u2019ll also discuss how users can hack these systems to personalize their feeds and how developers can design fairer, more diverse systems. Whether you're into dating apps, content feeds, or building ML pipelines, this workshop will help you understand the full spectrum of RecSys.", "description": "### **1. Introduction (10 mins)**\r\n\r\n* **Welcome and Overview**\r\n\r\n  * Introduction to the workshop: What are recommendation systems and why do they matter?\r\n  * Real-world examples:\r\n\r\n    * Dating apps (e.g., Tinder)\r\n    * Content feeds (e.g., Instagram)\r\n    * Food recommendations (e.g., Zomato)\r\n  * **Goals of the workshop**:\r\n\r\n    * Learn how RecSys work\r\n    * Dive into their challenges\r\n    * Understand their ethical implications\r\n\r\n* **Audience Poll / Engagement**\r\n\r\n  * Quick questions to gauge familiarity with RecSys\r\n  * Brief survey:\r\n\r\n    * Who uses these systems?\r\n    * Who\u2019s familiar with the tech behind them?\r\n\r\n---\r\n\r\n###  2. Foundations of Recommendation Systems (30 mins)\r\n\r\n**Goal**: Give a strong conceptual grounding before diving into implementation.\r\n\r\n* **Types of Training Data**\r\n\r\n  * Explicit Feedback: Ratings, thumbs-up/down\r\n  * Implicit Feedback: Clicks, dwell time, views, purchases\r\n\r\n* **Interaction Types**\r\n\r\n  * Positive-only vs. Positive & Negative Feedback\r\n\r\n* **System Categories by Use-Case**\r\n\r\n  * General-purpose, Context-aware, Sequential, Knowledge-based RecSys\r\n\r\n* **Core Approaches**\r\n\r\n  * Collaborative Filtering (User-based vs. Item-based)\r\n  * Content-Based Filtering\r\n  * Hybrid Models\r\n\r\n* **Application Examples**\r\n\r\n  * Netflix \u2192 Hybrid\r\n  * Amazon \u2192 Item-based CF\r\n  * Tinder \u2192 Context-aware\r\n  * Spotify \u2192 Sequential\r\n  * Zomato \u2192 Content + CF\r\n  * Pratilipi \u2192 Long-tail engagement via diversity-aware models\r\n\r\n* **Recommendation Pipeline**\r\n\r\n  * Retrieval Stage: Candidate generation\r\n  * Ranking Stage: Sorting by relevance\r\n  * Exploration vs. Exploitation\r\n\r\n* **Ranking Methods**\r\n\r\n  * Pointwise / Pairwise / Listwise\r\n\r\n* **Metrics that Matter**\r\n\r\n  * Offline Metrics: Precision\\@K, Recall, MAP, NDCG\r\n  * Business Goal Alignment:\r\n\r\n    * YouTube \u2192 Watch Time\r\n    * Tinder \u2192 Match Rate\r\n\r\n---\r\n\r\n### **3. Hands-On Session: Building a Recommendation System (40 mins)**\r\n\r\n**Goal**: Implement and understand the inner workings of a real model.\r\n\r\n* **Exercise 1: Building a Two-Tower Model (30 mins)**\r\n\r\n  * Use PyTorch to build a simple two-tower architecture\r\n  * Demonstrate user-item embedding and dot-product similarity\r\n  * Step-by-step: Data loading \u2192 Model \u2192 Loss \u2192 Training\r\n\r\n* **Exercise 2: Evaluating Your Model (10 mins)**\r\n\r\n  * Use standard metrics: Precision, Recall, MAP\r\n  * Compare online metrics vs. offline metrics\r\n\r\n---\r\n\r\n### **Break (10 mins)**\r\n\r\n---\r\n\r\n### **4. Challenges in Recommendation Systems (30 mins)**\r\n\r\n#### **Real-World Problems**\r\n\r\n* **Bias in Training Data**: Echo chambers, skewed preferences\r\n* **Cold Start**: New users/items with little interaction data\r\n* **Scalability**: Latency and compute at scale\r\n\r\n#### **Ethical Challenges**\r\n\r\n* **Algorithmic Bias & Fairness**: Impact on sensitive attributes\r\n* **Diversity vs. Personalization**: Avoiding homogenized content\r\n* **Debiasing Techniques**:\r\n\r\n  * **Exposure Bias**: Overexposure to certain items\r\n  * **Popularity Bias**: Trend dominance\r\n  * **Selection Bias**: Skewed relevance due to interaction patterns\r\n\r\n#### **Case Study: Pratilipi**\r\n\r\n* How an Indian storytelling platform balances fairness, diversity, and engagement\r\n\r\n---\r\n\r\n### **5. Hands-On Recap & Final Exercise (30 mins)**\r\n\r\n**Mini Lab**: Use your model to explore bias, diversity, and fairness.\r\n\r\n* Apply:\r\n\r\n  * Diversity boosting\r\n  * Popularity debiasing\r\n  * Freshness filters\r\n\r\n* **Re-evaluate**:\r\n\r\n  * Compare fairness, diversity, and relevance metrics before and after\r\n\r\n* **Group Reflection**:\r\n\r\n  * Discuss improvements, regressions, and trade-offs\r\n\r\n---\r\n\r\n### **6. Gaming the System: How Users Can Personalize Their Feeds (10 mins)**\r\n\r\n* How users can influence their recommendation feed (e.g., YouTube, Spotify)\r\n* Implications of over-personalization (filter bubbles, doomscrolling)\r\n* Tips for better and diverse recommendations\r\n\r\n---\r\n\r\n### **7. Conclusion & Q\\&A (20 mins)**\r\n\r\n* **Wrap-Up**\r\n* **Q\\&A**: Open floor for questions on theory, implementation, or ethics\r\n* **Additional Resources**:\r\n\r\n  * GitHub repo with code, datasets, and readings\r\n  * Encourage continued learning and experimentation", "recording_license": "", "do_not_record": false, "persons": [{"guid": "1c950f81-bf0e-5be2-927b-d0f548e28f6c", "id": 104, "code": "78MVQZ", "public_name": "Aman", "avatar": null, "biography": "### **About the Speaker**\r\n\r\n**Aman Kumar Pandey** is a Data Scientist specializing in NLP, Recommender Systems, and Applied AI, with 6+ years of experience across diverse industries.He has developed large-scale recommendation engines, fine-tuned LLMs, and worked on model monitoring, explainable AI, and multilingual NLP solutions.\r\n\r\nCurrently working at Pratilipi building Recommendation system at scale.\r\n\r\nHis work spans industry and conservation tech, using AI for wildlife monitoring via computer vision and deep learning. Passionate about open science and AI for social impact, he collaborates with researchers and NGOs to drive real-world innovation.\r\n\r\n* **Portfolio**: [https://aman5319.github.io/portfolio/](https://aman5319.github.io/portfolio/)\r\n* **Blogs**: [https://aman5319.github.io/portfolio/tech\\_blogs/](https://aman5319.github.io/portfolio/tech_blogs/)\r\n* **LinkedIn**: [https://www.linkedin.com/in/aman5319/](https://www.linkedin.com/in/aman5319/)\r\n* **GitHub**: [https://github.com/aman5319](https://github.com/aman5319)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/BYNTDM/", "id": 328, "guid": "dccc705b-88f0-5e2e-a2ca-095b4a28ccd1", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 4", "slug": "2025-328-offline-first-python-iot-mesh-security-ota-on-the-edge", "title": "Offline-First Python IoT: Mesh, Security & OTA on the Edge", "subtitle": "", "track": "Python for Hardware, Edge Computing, IoT", "type": "Workshop", "language": "en", "abstract": "What happens when your IoT devices lose connectivity \u2014 for hours, days, or forever? In this hands-on workshop, participants will build and emulate a fleet of Python-powered edge devices that store data locally, communicate over a peer-to-peer mesh, and receive secure over-the-air updates \u2014 all without relying on the cloud. \r\nUsing only Python and your laptop, you'll simulate a complete offline-first IoT stack: from runtime logic and local storage to mesh networking and cryptographically signed OTA delivery. Ideal for developers working on rural tech, disaster recovery, embedded platforms, or privacy-preserving systems.", "description": "Part 1 \u2014 Building the Offline Edge Runtime (45 min)\r\n- Simulating IoT sensor input (random or file-based)\r\n- Writing Python scripts that store data locally (SQLite/JSON)\r\n- Designing pluggable runtime logic using folders or configs\r\n- Creating a simple local dashboard (Textual/tkinter)\r\n\r\nGoal: Each participant runs a self-contained Python edge app that stores and processes sensor data offline.\r\n\r\nPart 2 \u2014 Simulating a Distributed Sensor Mesh (60 min)\r\n- Using Python\u2019s socket or asyncio to emulate device-to-device messaging\r\n- Setting up each \"device\" as a local process with a unique port\r\n- Broadcasting data, simulating node failures and hops\r\n- Creating a basic mesh protocol: relay rules, TTLs, and deduplication\r\n\r\nGoal: Simulate multiple edge devices forming a resilient network with no internet or central controller.\r\n\r\nPart 3 \u2014 Secure Over-the-Air (OTA) Updates (75 min)\r\n- Designing an OTA system using local files or a Python HTTP server\r\n- Creating cryptographically signed update bundles (PyNaCl or RSA)\r\n- Writing Python logic to poll, verify, and apply updates\r\n- Implementing rollback and version checks with manifest.json\r\n\r\nGoal: Push an update to one simulated device, then securely distribute and apply it across the mesh.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "85157cd1-cb79-55ec-b074-17c4c7c6bc79", "id": 262, "code": "33BK7Y", "public_name": "Pratik Kumar Panda", "avatar": null, "biography": "Hi, my name is Pratik Kumar Panda. I am Currently working at RedHat as an SRE. Primarly working on Openshift Dedicated and ROSA.\r\nIn my free time, you can find me building drones and hobby robots - tinkering with Raspberry Pis, Arduinos, and automation with Python", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 5": [{"url": "https://cfp.in.pycon.org/2025/talk/NEVVD3/", "id": 334, "guid": "3fed8b26-47ca-5730-a036-99a2b97e5579", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 5", "slug": "2025-334-arrypy-array-you-fast-enough-", "title": "ArryPy: Array You Fast Enough?", "subtitle": "", "track": "Python Core, Performance", "type": "Workshop", "language": "en", "abstract": "Building your own minimalist NumPy like, ArryPy, it reveals the secret sauce behind high-performance array computing. \r\n\r\nIn this hands-on workshop, you\u2019ll start with a na\u00efve Python loop, then progressively supercharge it: first pure-Python ufuncs, next Cython-typed memoryviews, and finally native C with SIMD via pybind11. \r\n\r\nAlong the way, you\u2019ll benchmark each stage in a live leaderboard, turning optimization into a competition. You\u2019ll leave equipped with concrete skills in profiling, vectorization, and extension modules\u2014and a clear roadmap for writing faster Python code in any project.", "description": "The main aim of this workshop is to build a numpy like library that will extract as much performance from Python as possible. \r\n\r\n1. First implement a basic class based library which people can start building, testing bed will be provided to then to easily verify whatever they are building. Basically using a lot of dunder methods. \r\n\r\n2. Broadcasting Logic in Python and Zero-Copy Views, Build slicing that returns views, not copies. Add stride-trick logic to handle mismatched shapes\r\n\r\n3. Start replacing working codes with Cython \r\n\r\n4. Replace Cython with Native C & SIMD via pybind11\r\n\r\n5. Benchmarking & Profiling Deep Dive\r\n- Use pytest-benchmark for reproducible results.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "5aac2f5f-05ab-5bc8-9137-beafb6004bf8", "id": 127, "code": "CVGYKQ", "public_name": "Abhik Sarkar", "avatar": null, "biography": "Abhik Sarkar is an experienced Python Machine Learning Engineer with over eight years of expertise in scalable, intelligent solutions. He currently leads the Machine Learning department at a high-growth startup specializing in computer vision technologies for safety and security.", "answers": []}, {"guid": "64062bab-1a1b-5089-8372-f0dcff46b071", "id": 212, "code": "L8MH3U", "public_name": "Anivesh Pandey", "avatar": null, "biography": "Developer working at the intersection of DevOps, machine reliability, and system observability using Python to bridge logic and low-level performance.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/GH8RVF/", "id": 158, "guid": "1e0a502d-91bd-5216-8bef-77b5f011aae2", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 5", "slug": "2025-158-optimising-deep-neural-inference-for-edge-devices-tools-pipelines-and-techniq", "title": "Optimising Deep Neural Inference for Edge Devices: Tools, Pipelines, and Techniq", "subtitle": "", "track": "AI, ML, Data Science", "type": "Workshop", "language": "en", "abstract": "Deploying real-time AI models on embedded Linux platforms like Raspberry Pi, Jetson Nano, or Rockchip-based boards is a growing need in industries like manufacturing, healthcare, and automotive. However, the challenges are real: constrained computing, tight memory, and limited power. This hands-on workshop walks you through the full lifecycle\u2014designing, optimising, cross-compiling, and deploying lightweight CNNS for inference at the edge.\r\nParticipants will start with a base CNN (e.g., MobileNet or ShuffleNet), apply model compression techniques like pruning and quantisation, and then learn how to build optimised deployment pipelines using TensorFlow Lite and PyTorch Mobile. We'll also touch upon using NPU accelerators and real-time profiling to hit performance targets. By the end, the audience would be able to deploy and benchmark a real model on an embedded Linux system.", "description": "**Introduction**\t- Motivation: Real-world use cases (smart cameras, Iot sensors, etc.)\r\n- Overview of embedded platforms (Jetson, Rockchip, Pi)\r\n\r\n**Model Selection and Design**\t- Lightweight CNNS: MobileNet, ShuffleNet, SqueezeNet\r\n- Trade-offs: Accuracy vs. Latency vs. Size\r\n- Hands-on: Load and inspect model performance\r\n\r\n**Model Optimisation Techniques**\t- Quantisation (Post-training, Aware Training)\r\n- Pruning & Knowledge Distillation\r\n- Tools: PyTorch/TF model optimisation toolkits\r\n- Hands-on: Apply optimisations to a CNN\r\n\r\n**Cross-Compiling & Toolchains**\t- Toolchains for ARM (aarch64): arm-linux-gnueabihf, Buildroot\r\n- Docker-based emulation\r\n- Hands-on: Compile an optimised TFLite model for ARM\r\n\r\n**Runtime & Deployment Pipelines**\t- Frameworks: TensorFlow Lite, PyTorch Mobile\r\n- Hardware acceleration: Coral Edge TPU, NPU on RK3588, Jetson\u2019s Tensorrt\r\n- Hands-on: Deploy to device or emulated ARM board\r\n\r\n**Performance Benchmarking & Profiling**\t- Tools: perf, htop, nvprof, TFLite Benchmark Tool\r\n- Scheduling & resource management\r\n- Hands-on: Profile and optimise inference latency\r\n\r\n**Wrap-up**\t- Recap + Resources\r\n- Where to go from here (Tinyml, ONNX Runtime, Automl Edge)\r\n\r\n**Case Study: Real-Time Object Identification for Drones (Jetson Nano / Raspberry Pi + NPU)**\r\n\r\nIn many drone-based applications\u2014such as agriculture, search and rescue, and surveillance\u2014there\u2019s a need for real-time object identification directly on the drone to avoid latency and connectivity issues associated with cloud inference.\r\n*Scenario*\r\nA lightweight drone is equipped with a Raspberry Pi 4B or Jetson Nano and a camera module. The goal is to identify specific objects on the ground\u2014e.g., vehicles, people, or crops\u2014using a real-time, optimised model running locally.\r\n\r\n*Problem*\r\n- The drone has constrained compute and battery capacity.\r\n- The model must operate under real-time constraints (<50ms inference time).\r\n- No internet connection during flight; the model must run fully offline.\r\n\r\n*Solution Covered in Workshop*\r\n- Participants will replicate a scaled-down version of this use case:\r\n- Use MobileNetV2 or TinyYOLO for object detection.\r\n- Apply quantisation-aware training to reduce model size and power usage.\r\n- Deploy the model using TensorFlow Lite or ONNX Runtime with NPU acceleration (if hardware available).\r\n- Profile latency and FPS during emulated inference.\r\n- Use frame-skipping and scheduling strategies to meet power constraints.\r\n*Hands-on Highlights*\r\n- Load sample aerial imagery or simulated video feed.\r\n-Test an optimised model on a Jetson Nano or Pi.\r\n- Compare CPU-only vs. NPU-accelerated inference times.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "42544bf9-132c-598d-a3f3-fe772a98edce", "id": 85, "code": "GHKUY7", "public_name": "Saradindu Sengupta", "avatar": null, "biography": "Specialises in computer vision, time-series forecasting, and scalable MLOps frameworks with over five years of experience in ML engineering.\r\nDevelops and deploys production-grade ML solutions in automotive, telematics, and clean-tech domains.\r\nLeads real-time inferencing platform development and ADAS calibration model deployment at Lytx, scaling across 100,000+ devices.\r\nDesigned predictive maintenance and anomaly detection models at Nunam Technologies, building MLOps pipelines with Kubeflow, KServe, and MLflow on AWS.\r\nContributes to open-source projects such as MLPerf-Tiny and delivers technical talks at major ML conferences.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 6": [{"url": "https://cfp.in.pycon.org/2025/talk/UKK8SS/", "id": 348, "guid": "6301f3d6-4734-5898-acb5-3d83da315462", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 6", "slug": "2025-348-scatter-the-learning-reduce-the-time-", "title": "Scatter The Learning. Reduce The Time.", "subtitle": "", "track": "AI, ML, Data Science", "type": "Workshop", "language": "en", "abstract": "What does it take to move the process of training a neural network from a single device to multiple? The data interdependency and memory layout, which are handled easily in a simple, single-device scenario, need to now be moved into the distributed computing realm.\r\n\r\nWe'll take a simple network training example, and through first principles, introduce the basic primitives that, when supported by a distributed computing framework, enable spreading the computation over multiple nodes.\r\n\r\nWe'll cover the principles with the help of PyTorch, and libraries from Huggingface. We'll use DDP/FSDP for describing the computation and introduce fundamental primitives like `reduce-scatter`, `all-gather` and the likes that enable DDP/FSDP.", "description": "**Goal** \r\n====\r\nHelp participants arrive at the distributed training code setup through first principles. Use small a dataset and a small model to enable execution on a personal computing device, but with code that should extend to a capable, distributed hardware architecture too.\r\n\r\n**Process**\r\n=======\r\n- We first set up and train a small network for a small dataset using [PyTorch](https://pytorch.org/) and [Huggingface Transformers](https://huggingface.co/docs/transformers/index).\r\n- We introduce the problem of training a larger model and with a larger training dataset\r\n  - We bring in the idea of \"at least one more node\" into the mix\r\n- Surface the challenge in splitting the training dataset and shuffling in a distributed manner\r\n  - Introduce the audience to the need for (and mechanics of operation of) Torch's DistributedSampler\r\n- Move onwards to the theory of distributed training and the various primitives - broadcast, all-reduce, reduce, all-gather, reduce-scatter etc.\r\n- The above motivates the introduction of libraries like [NCCL](https://developer.nvidia.com/nccl) and [gloo](https://github.com/pytorch/gloo).\r\n  - We will focus on gloo as it works on the CPU without any special hardware needs\r\n- Bring together the above into a single setup with the help of [Huggingface's Accelerate](https://huggingface.co/docs/accelerate/index) toolkit\r\n- Demonstrate an actual run in a distributed setup (use two processes on a single machine)\r\n- Stretch: We will demonstrate a run on multiple nodes with Nvidia cards using NCCL in the cloud at the end, on the same codebase with a few tweaks", "recording_license": "", "do_not_record": false, "persons": [{"guid": "4359be57-293f-5020-997e-cbf874741926", "id": 323, "code": "HDBNNT", "public_name": "Ravindra Jaju", "avatar": null, "biography": "I consider myself as a generalist with a deep interest in software engineering and leveraging software to solve problems. I've worked in multiple domains, and in multiple roles as a technologist. My primary interest in the early days was in the areas of text mining and information retrieval, along with traditional NLP. Over the years, I happened to move across different domains, including advertising, large scale data processing, edtech and manufacturing as well as technical coaching and consulting. Of late, I've been looking to revisit my interest in the area of text and natural language processing through the lens of modern day deep learning and have been spending time on learning and using tools and techniques relevant for the same. My primary focus areas are SLMs and running them on edge or customer-grade devices.", "answers": []}, {"guid": "9fa3e4e7-ee8b-511a-8f72-a9b8a0433b55", "id": 258, "code": "7XZR8J", "public_name": "Preethi Srinivasan", "avatar": null, "biography": "Preethi has an MS (by Research) from IIT Mandi and her thesis focused on Computer Vision specifically medical image post-processing. She is the first author on publications at ACCV, WiML, and IEEE CBMS. At Sahaj, she has built ML prototypes for video understanding, LLM fine-tuning, and RAG-based QA systems. Authored a blog series on LoRA and Intrinsic Dimension, which led to speaking engagements at PyCon India 2024 and The Fifth Elephant 2025.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/8XGQT3/", "id": 142, "guid": "4c95bc3f-130c-526f-9cb7-3609da1ecb2d", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 6", "slug": "2025-142-axolotl-on-a-budget-fine-tuning-70b-parameter-llms", "title": "Axolotl on a Budget: Fine-Tuning 70B-parameter LLMs", "subtitle": "", "track": "AI, ML, Data Science", "type": "Workshop", "language": "en", "abstract": "Fine-tuning large language models (LLMs) used to be an expensive and resource-intensive process, traditionally accessible only to large organizations with powerful GPUs. With recent advances, this landscape has dramatically changed. Using cutting-edge techniques like Low-Rank Adaptation (LoRA), Quantized Low-Rank Adaptation (QLoRA), and Fully Sharded Data Parallelism (FSDP), it's now possible to fine-tune massive models such as the 70B-parameter LLaMA at home on consumer-grade GPUs.\r\n\r\nIn this hands-on tutorial, you will gain an intuitive understanding of the fine-tuning process, how it differs from pre-training, and its practical applications. By the end of this session, you will have hands-on experience fine-tuning a large model efficiently and cost-effectively, empowering them to create and deploy customized LLMs using accessible hardware setups.", "description": "In this hands-on tutorial, participants will learn the following:\r\n1. **Installation and Setup with Axolotl via Conda**: Participants will start by installing and configuring the Axolotl framework using miniconda. Detailed guidance will be provided to ensure everyone has a fully functional local environment suitable for large model fine-tuning.\r\n2. **Understanding Fine-Tuning**: Participants will learn about the concept of fine-tuning - how it differs from pre-training, why it is important, and what specific applications benefit from fine-tuned models.\r\n3. **Technical Deep Dive into LoRA, QLoRA, and FSDP**: The session will introduce and explore the technical principles behind LoRA, QLoRA, and FSDP. \r\n4. **Introduction to Hugging Face Ecosystem and Transformers Library**: Participants will gain hands-on familiarity with Hugging Face\u2019s widely-used Transformers library. This part of the session will include an overview of the ecosystem, highlighting important tools and resources such as model repositories, datasets, and integration techniques.\r\n5. **Axolotl Configuration Overview**: Detailed walkthroughs on how to configure Axolotl for fine-tuning tasks, covering key settings, parameters, and best practices to optimize training runs. Participants will understand how to customize configuration files to suit specific tasks and datasets.\r\n6. **Executing Fine-Tuning Runs in Axolotl**: Attendees will learn the step-by-step process to launch fine-tuning runs using Axolotl. Practical examples will be demonstrated, enabling participants to replicate successful fine-tuning workflows independently.\r\n7. **Implementing Observability and Monitoring**: Participants will learn about setting up observability tools for finetuning, learning to effectively monitor and track key performance metrics during model training.\r\n8. **Evaluating the Fine-Tuned Models**: We will end the tutorial with approaches to evaluate fine-tuned models. Participants will learn how to set up benchmarks and objective tests to assess improvements accurately.\r\n\r\n**Resources required**\r\n- Access to two GPUs with \u2265 24 GB VRAM each (e.g., RTX 3090/4090, A6000). This is optional and you can follow along in the tutorial with a smaller toy model running on Colab\r\n- Software stack - python 3.11 with either venv/conda, git\r\n- We will edit yaml files in the workshop. So either have a code editor (like VSCode etc.) or terminal if you are comfortable with the likes of vim\r\n\r\n**Links to Github repos and papers**\r\n- https://github.com/axolotl-ai-cloud/axolotl\r\n- https://github.com/huggingface/transformers\r\n- https://github.com/bitsandbytes-foundation/bitsandbytes\r\n- https://github.com/huggingface/peft\r\n- https://arxiv.org/abs/2304.11277\r\n- https://arxiv.org/abs/2305.14314 \r\n- https://arxiv.org/abs/2106.09685", "recording_license": "", "do_not_record": false, "persons": [{"guid": "320884d4-708b-5899-ba7a-9c39fb59fd8f", "id": 98, "code": "MVMTPJ", "public_name": "Aniket", "avatar": null, "biography": "Aniket Kulkarni is the founder of Curlscape, where he helps businesses bring practical AI applications to life fast. He has led the design and deployment of large-scale systems across industries, from finance and healthcare to education and logistics. His work spans LLM-based information extraction, agentic workflows, voice assistants, and continuous evaluation frameworks. An engineer at heart, Aniket blends deep technical expertise with a product mindset to build AI that\u2019s both reliable and usable.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Room 7": [{"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "d6e0ad14-b7d7-5ba0-ba35-f3ea0df3ad2c", "date": "2025-09-12T10:00:00+05:30", "start": "10:00", "logo": null, "duration": "03:00", "room": "Room 7", "slug": "2025-343-0-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "a2fb48ec-739b-55e6-aa96-190790608c4d", "date": "2025-09-12T14:00:00+05:30", "start": "14:00", "logo": null, "duration": "03:00", "room": "Room 7", "slug": "2025-343-1-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}]}}, {"index": 2, "date": "2025-09-13", "day_start": "2025-09-13T04:00:00+05:30", "day_end": "2025-09-14T03:59:00+05:30", "rooms": {"Track 1": [{"url": "https://cfp.in.pycon.org/2025/talk/NGSJRU/", "id": 227, "guid": "05486002-ce11-5c0e-ba18-054b80cb4640", "date": "2025-09-13T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-227-mcp-unlocked-the-key-to-smarter-ai-contextualization", "title": "MCP Unlocked: The Key to Smarter AI Contextualization", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "In an era where AI models are evolving rapidly, context is everything. Model Context Protocol (MCP) bridges the gap between static models and dynamic, real-world interactions. This session will explore how MCP empowers AI to adapt, refine, and optimize decisions based on contextual cues\u2014leading to smarter predictions, personalized experiences.\r\nAttendees will gain a deep understanding of MCP\u2019s components, application, challenges, and future potential. Whether you're an AI enthusiast, a researcher, or an industry professional, this talk will provide valuable insights into leveraging MCP for real-world innovation and enhanced AI decision-making. Join me to unlock the future of intelligent, context-aware models!", "description": "In an era where AI models are evolving rapidly, context is everything. **Model Context Protocol (MCP)** bridges the gap between static models and dynamic, real-world interactions. This session will explore how MCP empowers AI to adapt, refine, and optimize decisions based on contextual cues\u2014leading to smarter predictions, personalized experiences.\r\n\r\nFollowing are the topics covered in the talk\r\n\r\n* Overview of AI model adaptation challenges\r\n* Why context matters in AI decision-making\r\n* Overview of Model Context Protocol (MCP)\r\n* How MCP enhances AI models with contextual awareness\r\n* Key components and structure of MCP\r\n* Differences between traditional models and MCP-enabled systems\r\n* Real-World Applications of MCP\r\n* Challenges in Implementing MCP\r\n* Future Prospects and Innovations in MCP", "recording_license": "", "do_not_record": false, "persons": [{"guid": "b6a7ce8b-5d52-59f7-9260-33e43f7c7320", "id": 92, "code": "3HJ3PX", "public_name": "Sasidhar Donaparthi", "avatar": null, "biography": "I am a mechanical engineering graduate with 3 decades of experience in manufacturing and financial services domains, I have started my career as design engineer in hydraulic turbine manufacturing company. After spending 5 years, I have stated my IT journey at Aspect Development/i2 Technology. I have worked primarily on data scrubbing, modelling, analysis and data migration projects for supply chain management. I then joined technology services side of a financial services company and currently working as data scientist. I have been using python for last 10+ years for automation, data analysis, data science, web development, etc. I am very excited about the endless opportunities that arise in day today work and application of python for solving problems, automating day to day activities. I conduct regular training sessions for data analysis ( numpy, pandas, scikit-learn and matplotlib) in my company.\r\n\r\nI am a regular speaker at Pycon India conference. I have done various talks and workshops in Pycon India since 2017.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/S3TDZB/", "id": 184, "guid": "b33c0729-0fe9-5df0-a7ea-80e01f26ac54", "date": "2025-09-13T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-184-mastering-prompts-with-feedback-and-pydantic", "title": "Mastering Prompts with Feedback and Pydantic", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Prompt engineering has become a core skill in working with LLMs, yet writing effective prompts is tedious, inconsistent, and often requires multiple attempts. Most prompt development today is done manually, relying on trial and error, which doesn\u2019t scale well, especially in production environments where consistency is crucial. This talk presents a practical approach to optimizing prompts by treating them as evolving tools. The process includes refining prompts based on feedback and ensuring the outputs meet structure and quality requirements, with the help of Pydantic to validate and enforce output standards. This helps create stable, production-ready prompts through continuous and iterative improvement.", "description": "Crafting a good prompt shouldn\u2019t feel like guesswork. In this talk, we\u2019ll introduce a method for improving prompts using feedback from humans or models. By evaluating prompts against task-specific datasets, scoring output quality, and refining prompts based on feedback, this method ensures continuous improvement and higher-quality results. We also use Pydantic to ensure the output adheres to the required structure and meets quality standards, making the process more reliable and aligned with production requirements.\r\n\r\n#### Outline\r\n* Challenges in prompt engineering\r\n* Feedback-driven refinement\r\n* Scoring prompts\r\n* Rephrasing with feedback\r\n* Output validation (Pydantic)\r\n* Iterative improvement\r\n\r\nTarget Audience: ML engineers, data scientists, developers working with LLMs in production, and anyone looking to learn how to build robust AI workflows using open source tools.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "fbde50eb-0657-5685-a129-80f78287d373", "id": 167, "code": "JEGWEF", "public_name": "Mahima Arora", "avatar": "https://cfp.in.pycon.org/media/avatars/JEGWEF_lpCmBCJ.png", "biography": "Mahima Arora is a Senior Data Scientist on the Data & AI team at Red Hat, specializing in Generative AI applications. She develops AI-powered solutions that enhance efficiency and effectiveness, leading initiatives to optimize AI systems for greater impact. An open-source enthusiast, Mahima continuously explores new tools and technologies to expand her expertise and stay at the forefront of innovation.", "answers": []}, {"guid": "bdb6953a-cbfd-5f15-95a6-2b128c163ad4", "id": 168, "code": "EUGVVX", "public_name": "Aarti Jha", "avatar": "https://cfp.in.pycon.org/media/avatars/EUGVVX_Tr1vsnd.jpg", "biography": "Aarti Jha is a Senior Data Scientist at Red Hat, where she develops AI-driven solutions to streamline internal processes and reduce operational costs. She brings over 6.5 years of experience in building and deploying data science and machine learning solutions across industry domains.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "359b7f6c-4c4f-5b59-9ee2-d0a3c313dc65", "date": "2025-09-13T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-343-2-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/XN3P7N/", "id": 275, "guid": "c28b4d07-8083-50c2-8f25-f363ba7a2578", "date": "2025-09-13T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-275-memory-is-the-agent-architecting-stateful-reasoning-in-python", "title": "Memory is the Agent: Architecting Stateful Reasoning in Python", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Today\u2019s AI agents generate, but they don\u2019t remember. They hallucinate, forget goals, and can\u2019t recover across tasks. Why? Because they\u2019re stateless.  \r\n\r\nIn this talk, we reframe **memory** as the **core control loop** of intelligent agents, not just a retrieval layer.\r\n\r\n---\r\n\r\n## What You\u2019ll Learn\r\n\r\n- How to architect persistent memory in Python using:\r\n  - **Redis** (short-term memory buffers)\r\n  - **Vector databases** (semantic recall)\r\n  - **Structured state buffers** (long-term identity)\r\n- Design patterns for:\r\n  - Episodic vs. semantic memory modeling\r\n  - TTL-based forgetting + reinforcement\r\n  - Memory-aware retries, planning, and reflection\r\n\r\n---\r\n\r\n## Who This Is For\r\n\r\nWhether you're building:\r\n\r\n- a chatbot\r\n- an LLM copilot\r\n- or an autonomous workflow agent\r\n\r\nThis talk will shift your lens from **prompt engineering** to **memory engineering**.\r\n\r\n---\r\n\r\n## Core Message\r\n\r\n> Memory isn\u2019t an optimization.  \r\n> **It\u2019s the agent.**", "description": "## **Memory is the Agent: Architecting Stateful Reasoning in Python**\r\n\r\n---\r\n\r\n### **Setting the Problem**\r\n\r\n**Title:** Why Today\u2019s Agents Fail\r\n**Content:**\r\n* Brief demo or real-world failure case: an LLM forgets previous tasks\r\n* Frame the core problem: agents are stateless, can\u2019t reflect, retry, or adapt\r\n\r\n---\r\n\r\n### **Memory as Cognition (Epistemic Foundations)**\r\n\r\n**Title:** Not Retrieval: Reasoning\r\nShift the frame from \u201cRAG = memory\u201d to \u201cmemory = agent state\u201d\r\n**Content:**\r\n* Define memory types: working, semantic, episodic, symbolic\r\n* Introduce cognitive science foundations (from Mem0, SALM, Episodic Memory research)\r\n* Explain why memory is necessary for identity, planning, and belief updates\r\n\r\n---\r\n\r\n### **System Architecture in Python**\r\n\r\n**Title:** Building Memory in Practice\r\nBridge theory to code: show how memory works in real infra\r\n**Content:**\r\n* Redis for short-term/working memory (task buffers, TTL)\r\n* Vector DBs (Chroma/Faiss) for semantic memory (retrieval with decay)\r\n* JSON/SQLite/Postgres for episodic traces (task logs, session recall)\r\n* TTLs, reinforcement, expiry logic\r\n* Diagrams: control loop \u2192 memory \u2192 planner \u2192 action\r\n\r\n---\r\n\r\n### **Symbolic Layer + Planning**\r\n\r\n**Title:** From Storage to Structure\r\nShow how symbolic memory enables higher-order reasoning\r\n**Content:**\r\n* Use graph-based or metagraph memory (e.g., goals, subgoals, belief nodes)\r\n* Reuse of planning queues, retry trees\r\n* How belief revision and contradiction handling are wired\r\n\r\n---\r\n\r\n### **Live Demo**\r\n\r\n**Title:** Memory in Action\r\n\r\n**Content:**\r\n* Show an agent remembering tasks across sessions\r\n* Show ra etry loop that consults past failure logs\r\n* Show TTL-based forgetting in action (agent \"forgets\" old tasks)\r\n\r\n---\r\n\r\n### ** Design Patterns & Trade-offs**\r\n\r\n**Title:** What Breaks and Why\r\n\r\n**Content:**\r\n* Memory consistency, replay bugs\r\n* Latency vs recall accuracy tradeoff\r\n* Cost (vector DB vs Redis vs local JSON) comparison\r\n\r\n---\r\n\r\n### **Close Strong**\r\n\r\n**Title:** From Prompt Engineering to Memory Engineering\r\n**Content:**\r\n* \u201cPrompt chaining is a crutch. Stateful reasoning is a system.\u201d\r\n* Share resources: Mem0, Redis agent stack, vector TTL pattern\r\n* Call to action: adopt a memory-first design for agents that evolve\r\n\r\n---", "recording_license": "", "do_not_record": false, "persons": [{"guid": "530ae100-2cf5-596f-ad00-1a210c35bb5a", "id": 227, "code": "FE9SPU", "public_name": "Archit Singh", "avatar": null, "biography": "Archit Singh is a Senior Software Engineer at Abnormal AI with 8+ years of experience building high-concurrency systems, distributed infrastructure, and GenAI-powered pipelines. He has led the development of scalable LLM agent platforms, memory-aware retry mechanisms, and stateful execution layers for copilots and multi-agent workflows. His work focuses on bridging cognitive architectures with production-grade infrastructure, turning stateless AI chains into systems that remember, reflect, and evolve.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/MERDPA/", "id": 204, "guid": "65f85776-1f7f-594e-8cdf-a4ff7b71cfa2", "date": "2025-09-13T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-204-scaling-python-for-performance-40x-faster-image-processing-with-smart-designing", "title": "Scaling Python for Performance: 40x Faster Image Processing with Smart designing", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Python is often criticized for its Global Interpreter Lock (GIL), which is seen as a bottleneck for high-performance computing. However, this talk showcases how Python, when used with right design principle, can deliver <b>40x throughput improvement</b>  w.r.t. baseline implementation in a real-world image segmentation post-processing pipeline. We present a generic rectangle partitioning algorithm that converts irregular segments into precise, non-overlapping rectangles. \r\nBy leveraging <b>multiprocessing, ProcessPoolExecutor, and  Numba JIT compilation</b> with <b>shared memory and inter-process communication (IPC)</b>, we overcome GIL limitations and scale efficiently across cores. This session will walk through the architectural decisions, performance bottlenecks, and Pythonic optimizations that made this possible\u2014demonstrating that Python, with the right tools and mindset, can be both elegant and fast.", "description": "This talk begins with a real-world problem from semiconductor manufacturing: converting irregular image segments into precise, non-overlapping rectangles for downstream processing. We\u2019ll start by introducing the application context and the initial naive solution built using Python\u2019s cv2 and NumPy libraries. A flowchart will illustrate the basic pipeline of the naive approach and its limitations in terms of performance and scalability.\r\nFrom there, the presentation follows a step-by-step journey of iterative optimization. First, we explore basic multiprocessing to parallelize the workload, which brings modest gains but introduces memory overhead. Next, we enhance this with multiprocessing Manager to share state more efficiently, followed by a producer-consumer model using Queue to better distribute tasks.\r\nThe final breakthrough comes with ProcessPoolExecutor, which simplifies process management and maximizes CPU utilization. Along the way additionally , we also leverage Numba for JIT compilation of compute-heavy functions. The key message: Python\u2019s tools are powerful, but engineering design and correct usage are what unlock real performance.\r\n\r\n<b> Detailed Outline</b>\r\nThe talk will progressively tackle the problem, addressing challenges and improvements through an iterative, step-by-step approach.\r\n<b>Introduction: The Real-World Challenge</b>\r\nIn semiconductor manufacturing, precision is paramount. One critical task involves converting irregular image segments\u2014often noisy, overlapping, or imprecise\u2014into clean, non-overlapping rectangles.<br><br>\r\n\r\n<b>1. Naive Approach</b>\r\nThe initial solution uses Python\u2019s OpenCV (cv2) and NumPy libraries. A computation-bound algorithm was written from scratch to solve the problem. This approach is straightforward but lacks scalability and performance.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>Simple to implement</li>\r\n  <li>Uses well-known libraries</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>Single-threaded</li>\r\n  <li>High memory usage</li>\r\n  <li>Poor scalability</li>\r\n</ul>\r\n\r\n<b>2. Basic Multiprocessing</b>\r\nPython\u2019s multiprocessing module is used to parallelize the workload across CPU cores. This improves speed but increases memory usage.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>Utilizes multiple CPU cores</li>\r\n  <li>Faster than naive approach</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>High memory overhead</li>\r\n  <li>Complex process management</li>\r\n</ul>\r\n\r\n<b>3. Manager-based Sharing</b>\r\nUsing <i>multiprocessing.Manager</i> allows shared data structures across processes, reducing memory duplication.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>Reduced memory usage</li>\r\n  <li>Shared state across processes</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>Slower inter-process communication</li>\r\n  <li>Slightly more complex code</li>\r\n</ul>\r\n\r\n<b>4. Producer-Consumer Model</b>\r\nA producer-consumer pattern using Queue is implemented to dynamically distribute tasks.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>Better load balancing</li>\r\n  <li>Scales well with complexity</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>Requires careful synchronization</li>\r\n  <li>More complex architecture</li>\r\n</ul>\r\n\r\n<b>5. ProcessPoolExecutor</b>\r\nThe <i>concurrent.futures.ProcessPoolExecutor</i> simplifies process management and improves CPU utilization.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>Cleaner syntax</li>\r\n  <li>Automatic process pooling</li>\r\n  <li>High CPU utilization</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>Less control over individual processes</li>\r\n</ul>\r\n\r\n<b>6. Bonus: Numba JIT Optimization</b>\r\nNumba is used to apply Just-In-Time (JIT) compilation to compute-heavy functions.\r\n<b>Pros:</b>\r\n<ul>\r\n  <li>5x\u201310x speedup</li>\r\n  <li>Easy to apply with @jit decorator</li>\r\n</ul>\r\n<b>Cons:</b>\r\n<ul>\r\n  <li>Limited to numerical functions</li>\r\n  <li>May require code refactoring</li>\r\n</ul>\r\n\r\n<b>7. Key Takeaways</b>\r\n<ul>\r\n  <li><b>Python is powerful, but performance comes from engineering design</b>, not just libraries.</li>\r\n  <li><b>Parallelism must be carefully managed</b> to avoid memory and synchronization issues.</li>\r\n  <li><b>ProcessPoolExecutor and Numba</b> are game-changers for CPU-bound tasks.</li>\r\n  <li><b>Profiling and iteration are essential</b>\u2014what works for one dataset may not scale.</li>\r\n</ul>", "recording_license": "", "do_not_record": false, "persons": [{"guid": "4c5929fd-45b1-521b-882b-32bab226a5e9", "id": 189, "code": "ENWLCU", "public_name": "Shaleen Jain", "avatar": null, "biography": "I'm a computer vision engineer with a strong foundation in classical image processing and a passion for modern AI. My journey began at BARC, where I tackled scientific imaging challenges, and evolved at Applied Materials, where I built deep learning-based solutions for semiconductor manufacturing. I specialize in fusing traditional vision techniques with deep learning to create scalable, interpretable, and high-performance systems. I thrive at the intersection of research and real-world application\u2014bringing AI from concept to product.\r\n\r\nBeyond the lab and code, I find balance and inspiration in the outdoors and the arts. Trekking fuels my sense of exploration, much like research does. Reading and writing in Hindi keep me grounded in language and expression, while cooking\u2014both a science and an art\u2014mirrors my love for experimentation and creativity. Whether it's crafting a model or a meal, I enjoy the process of building something meaningful from the ground up.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/8H8MBB/", "id": 175, "guid": "a77134e8-5cc8-5ff0-b9bd-570818992429", "date": "2025-09-13T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-175-navigating-real-world-challenges-in-a-production-grade-multi-agent-system", "title": "Navigating real-world challenges in a production-grade multi-agent system", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Multi-agent systems are gaining traction across various domains due to their ability to adapt and operate in dynamic environments while accomplishing complex tasks. This is largely attributed to their capabilities in tool invocation, context management, planning, and inter-agent collaboration. While their potential is promising, developing sophisticated multi-agent systems for real-world applications presents a unique set of challenges, including accuracy, latency, and operational costs.\r\n\r\nIn this talk, we will explore these challenges in depth and discuss practical strategies to address them. Performing a case study with a conversational AI assistant interacting with enterprise data, we will elaborate on how multiple agents were orchestrated to address dynamic computations and information retrieval from both structured and unstructured data sources to derive insights. We will walk you through the lessons we learned while building a production-ready multi-agent application.", "description": "Introduction (2 mins)\r\nEffectiveness of the Multi-agent system for dynamic environments (3 mins)\r\nChallenges faced in making it Production-ready and solutions to address them(15 mins)\r\nConclusion (5 mins)\r\nQuestion and Answer (5 mins)", "recording_license": "", "do_not_record": false, "persons": [{"guid": "20716058-f7f1-5724-bd59-a9a92a5333ab", "id": 157, "code": "ABUBPB", "public_name": "Shruti Dhavalikar", "avatar": null, "biography": "Shruti Dhavalikar is a seasoned Data Scientist with over 6 years of experience, currently serving as a Solution Consultant at Sahaj Software in Pune, India. Her expertise lies in transforming complex data into actionable insights, delivering end-to-end product cycles under Agile methodologies, and ensuring scalable, clean, and robust coding across diverse tech stacks. Shruti's strong communication skills have enabled her to effectively interact with clients, contributing to successful project outcomes. Beyond her professional pursuits, she harbours a curiosity for cosmology and space, and enjoys exploring different cuisines as a travelling foodie.", "answers": []}, {"guid": "2ef66c0f-dff4-5cd9-883a-ec1a46f45e73", "id": 158, "code": "F7UHHX", "public_name": "Sibin Bhaskaran", "avatar": null, "biography": "Sibin Bhaskaran is a Solution Consultant and technology lover at Sahaj AI Software. With over a decade of practical knowledge, he strives to gain a comprehensive understanding of the entire business lifecycle, putting into perspective the pivotal role that technology plays in its overall success. He has extensive knowledge across diverse domains of technology, spanning backend development, mobility solutions, robotic process automation, and machine learning.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/W8VJX3/", "id": 46, "guid": "5cebf73d-b8de-5bfa-ba27-afb7bbe2c348", "date": "2025-09-13T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-46-duckdb-is-the-new-pandas", "title": "DuckDB is the new Pandas", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Traditional Pandas workflows have long been the go-to for Python data analysis, but as datasets grow larger and queries more complex, performance bottlenecks can hold you back.\r\n\r\nIn this talk, you'll learn how DuckDB (it's like SQLite for analysis) is replacing Pandas. It's faster, runs on multiple cores, takes less memory, handles more data, runs on multiple languages, even runs in the browser, connects to far more data sources, and uses SQL which is more popular than Pandas.\r\n\r\nThrough live coding examples, you'll see real-world scenarios where DuckDB not only complements but in many cases outperforms Pandas. Plus, you don't have to learn DuckDB since LLMs will write most of your code for you.", "description": "1. Introduction (5 min)\r\n2. Core Features of DuckDB (8 min)\r\n3. How DuckDB outperforms Pandas (7 min)\r\n4. Live Coding: Performance in Action (7 min)\r\n5. Future Trends and Q&A (3 min)", "recording_license": "", "do_not_record": false, "persons": [{"guid": "cdd9aec0-fc6d-56c4-ac68-9598024d78ca", "id": 14, "code": "F7PS78", "public_name": "Anand S", "avatar": null, "biography": "Anand is an LLM psychologist at Straive. (It's not an official title. He just calls himself that.) He co-founded Gramener, a data science company that narrates visual data stories, which Straive acquired. He is considered one of India's top 10 data scientists and is a regular TEDx/PyCon speaker.\r\n\r\nAnand is a gold medalist at IIM Bangalore and an alumnus of IIT Madras, London Business School, IBM, Infosys, Lehman Brothers, and BCG.\r\n\r\nMore importantly, he has hand-transcribed every Calvin & Hobbes strip ever and dreams of watching every film on the IMDb Top 250.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Track 2": [{"url": "https://cfp.in.pycon.org/2025/talk/GGV3EJ/", "id": 310, "guid": "9949656e-7caf-5dbc-9f07-1bc78dd01cf6", "date": "2025-09-13T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-310-is-fastapi-really-fast-", "title": "Is FastAPI really fast ?", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Talk", "language": "en", "abstract": "FastAPI has taken the Python community by storm with promises of blistering performance but is it truly the fastest choice for your APIs? In this session, we\u2019ll pull back the curtain on FastAPI\u2019s async foundation, Pydantic powered validation, and auto\u2011generated docs to understand the real sources of its speed. Then, through  benchmarks comparing FastAPI with Flask, Django, Express.js, and Go\u2019s Gin you\u2019ll see exactly where it excels, where it doesn\u2019t, and why context matters more than hype. Walk away knowing when FastAPI is your secret weapon and when another framework might better serve your real\u2011world needs.", "description": "1. **Introduction & Motivation** (5\u202fmin)\r\n    - Quick audience poll: FastAPI experience\r\n    - The \u201cFastAPI hype\u201d vs. real\u2011world questions\r\n    - Why performance matters in frameworks\r\n2. **FastAPI Architecture Deep\u2011Dive** (6\u202fmin)\r\n    - Starlette + uvloop + Uvicorn async core\r\n    - Pydantic validation impact\r\n    - Automatic OpenAPI/Swagger docs\r\n    - How each layer impacts request flow\r\n3. **Benchmark Methodology** (4\u202fmin)\r\n    - GitHub repo walkthrough: reproducible tests\r\n    - API Test categories\r\n        - Single Query\r\n        - JSON serialization\r\n        - Multiple Queries\r\n        - Data Update\r\n        - Plain Text\r\n    - Comparison targets: Flask, Django, Express.js, Gin\r\n4. **Benchmark Results & Analysis** (8\u202fmin)\r\n    - Latency and throughput charts\r\n    - Use\u2011case breakdown: I/O\u2011bound vs. CPU\u2011bound endpoints\r\n    - Key takeaways: where FastAPI leads and where it trails\r\n5. **Framework Decision Guide** (4\u202fmin)\r\n    - Balancing raw speed with ecosystem maturity, libraries, team expertise\r\n    - Ideal scenarios for FastAPI (microservices, real\u2011time apps)\r\n    - When to favor Flask/Django or alternative stacks\r\n6. **Benchmarking Repo Walkthrough** (3\u202fmin)\r\n    - Cloning and running the benchmark suite\r\n    - Customizing tests for your own workloads\r\n    - Interpreting results to inform your project decisions\r\n7. **Q&A & Next Steps** (5\u202fmin)\r\n    - Share GitHub repo and docs\r\n    - Further reading and community resources\r\n    - Open floor for audience questions\r\n\r\nThis is the link to my previous talk at Escape 2024 by BBD software : https://youtu.be/ohNsulYlgQE?si=G6iGmmNw0Z9LpU32\r\nPlease note PyCon2025 will be having new benchmarkings and totally new format of talk of previous talk.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "f3e1a3d2-b5de-54bf-803c-869bcaeb6d0d", "id": 259, "code": "MD9GZQ", "public_name": "Princekumar Dobariya", "avatar": null, "biography": "Software engineer at BBD Software. Working closely with Django, FastAPI, Azure, GenAI real life use case implementations, AI Agents.\r\nCurious, life long learner.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/3AZLWM/", "id": 186, "guid": "3f2e5d08-cb04-5a90-842c-449c20e70518", "date": "2025-09-13T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-186-finding-a-needle-in-the-haystack-debugging-performance-issues", "title": "Finding a Needle in the Haystack - Debugging Performance Issues", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "What do you do when a Sev1 performance fire alarm goes off in your Python application? Suddenly, we're tasked with debugging a critical issue, and often, just identifying the true bottleneck feels like searching for a needle in a vast haystack.\r\n\r\nWe'll explore a toolkit of essential Python profilers \u2013 from deterministic tools like cProfile to sampling profilers like Pyinstrument and py-spy, and memory profilers such as memory_profiler and tracemalloc.", "description": "- A systematic approach to diagnosing performance bottlenecks in Python applications, moving beyond guesswork.\r\n- An understanding of different types of Python profilers (cProfile, Pyinstrument, py-spy, Austin, memory_profiler, tracemalloc) and when to use each.\r\n- Practical guidance on how to use and interpret the output of these profilers, including how to read and leverage flamegraphs for quick insights.\r\n- Techniques for investigating both CPU-bound and memory-related performance issues in Python.\r\n- Actionable tips based on a Python case study, demonstrating the profiling process from problem to resolution.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "37f17601-2b12-549a-af24-462967e94078", "id": 99, "code": "JDW3QF", "public_name": "Puneet Khushwani", "avatar": null, "biography": "With a career ethos of \"Never Stop Building,\" Puneet Khushwani has spent nearly a decade tackling diverse challenges across the technology landscape. Their experience includes the high-energy '0 to 1' journey of bringing new products to life, followed by a deliberate shift to driving growth in large-scale enterprise environments ('10 to 100'). \r\n\r\nThis included key contributions at Coupa, where they also transitioned from an IC to an Engineering Manager role. Puneet recently joined GoDaddy in Pune, India, where they support the CET team.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/XQ7MMR/", "id": 149, "guid": "247ca735-bd1b-518d-aa35-fa2a9e63fa62", "date": "2025-09-13T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-149-implementing-an-mcp-server-for-dbms-in-python-ydb-s-experience", "title": "Implementing an MCP Server for DBMS in Python \u2014 YDB\u2019s Experience", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Discover how YDB leverages the Model Context Protocol (MCP) to bridge AI models with database systems. This session delves into the development of a Python-based MCP server that enables seamless interactions between large language models and YDB\u2019s open-source Distributed DBMS. Learn about the design decisions, challenges faced, and the practical benefits of integrating MCP into data architecture. Ideal for developers and AI practitioners aiming to enhance AI capabilities with direct database access.", "description": "* 1 min speaker intro\r\n* 4 mins introduction to MCP\r\n* 4 mins why Python is an excellent fit for implementing MCP, and what tools are available\r\n* 8 mins sharing of practical experience building an MCP server for DBMS integration in Python\r\n* 5 mins automated testing of MCP integrations\r\n* 3 mins lessons learned\r\n* 5 mins Q&A", "recording_license": "", "do_not_record": false, "persons": [{"guid": "e839261a-76a6-504a-b7ce-ac1c31ec444f", "id": 134, "code": "XXUZMQ", "public_name": "Ivan Blinkov", "avatar": null, "biography": "Ivan Blinkov is a seasoned technical leader specializing in data storage and processing. Over the last decade, he was involved in the development of several database management systems, two of which are open-source: ClickHouse in the past and, currently, YDB.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "5803202b-efb6-5c63-9a25-b0cd415eff2e", "date": "2025-09-13T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-343-3-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/PCWZKW/", "id": 249, "guid": "a7941173-4715-5c38-ac1e-c91d7b9869e3", "date": "2025-09-13T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-249-the-anatomy-of-django-migrations", "title": "The Anatomy of Django Migrations", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Talk", "language": "en", "abstract": "Ever wondered how Django magically updates your database when you change your models? In this talk, we\u2019ll explore what really happens behind the scenes\u2014from detecting model changes to generating migration files, and finally applying those changes to your database.\r\n\r\nEven if you're not a Django user, this talk offers a clear and engaging look at how Django handle schema changes safely. We'll walk through Django\u2019s internal components like the migration graph, loader, autodetector, optimizer and executor. You'll leave with a deeper appreciation for how Django abstracts away complexity, and how similar ideas appear across frameworks.\r\n\r\nWhether you're new to Django or an experienced user, this talk will help you understand migrations not just as files\u2014but as a powerful engine that keeps your data model in sync with your code.", "description": "1. Intro: What Are Migrations, and Why Do They Matter?\r\n- Problem: Databases and code drift over time\r\n- Common approaches to schema management (manual SQL, Alembic, Django, etc.)\r\n- What makes Django\u2019s approach special?\r\n\r\n2. Django Migrations: A Gentle Overview\r\n- Quick overview of how Django works\r\n- models.py \u2192 makemigrations \u2192 migrate \u2014 what it looks like to users\r\n- Why migrations are more than just file diffs\r\n\r\n3. The Internals \u2014 At a Glance\r\nQuick introduction of each major component:\r\n- Autodetector: finds changes in model state\r\n- Optimizer: reduces unnecessary operations\r\n- Writer: generates migration files\r\n- Loader: reads migrations and builds state\r\n- Questioner: handles ambiguity (e.g., default values)\r\n- Executor: applies the plan to the DB\r\n- Recorder: keeps track of what ran\r\n\r\n4. Deep Dive: The Migration Graph\r\n- What it is: a DAG of migration dependencies\r\n- How Django builds and uses it\r\n- Handling merge conflicts and branching\r\n- Squashing and its implications\r\n- How the graph makes migrations reliable at scale\r\n\r\n5. Why This Matters Beyond Django\r\n- Framework-neutral ideas: migration graphs, schema safety, idempotency\r\n- Inspiration for ORMs or database tooling outside Django\r\n- Contributions and resources\r\n\r\n6. Q&A / Wrap-Up\r\n- Key takeaways\r\n- When to dig into internals yourself\r\n- Recommended reading / Django source modules", "recording_license": "", "do_not_record": false, "persons": [{"guid": "cf15c2eb-c5a0-58fd-a4dc-43c23e36b339", "id": 217, "code": "WWMDLH", "public_name": "Bhuvnesh Sharma", "avatar": null, "biography": "SDE 1 @Zelthy | Django core contributor | DSF member | GSoC'23 mentee , GSoC'24 mentor @Django", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "3d85b9ab-aa72-55a4-9c20-6027adc222d7", "date": "2025-09-13T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-343-4-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/L8AUWL/", "id": 332, "guid": "c3d79bbb-a664-57d4-a07e-607402136eee", "date": "2025-09-13T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-332-surprises-pitfalls-and-patterns-learnings-from-interviewing-400-developers", "title": "Surprises, Pitfalls, and Patterns: Learnings from Interviewing 400+ developers", "subtitle": "", "track": "Community", "type": "Talk", "language": "en", "abstract": "After interviewing hundreds of Python developers over the years, I noticed a recurring pattern: many candidates can use Python, but few truly understand it. This talk distills those insights\u2014what separates good coders from great ones\u2014not based on syntax, but on depth, clarity, and conceptual grasp.\r\n\r\nWe'll walk through real-world examples from interviews that tripped up even experienced developers. From subtle behaviors of Python features, to the nuances, and often misunderstood concepts. This talk will challenge your assumptions and sharpen your Python thinking.\r\n\r\nAlong the way, we'll explore lesser-known language features, edge cases, and patterns that interviewers (like me) use to probe true fluency. If you're preparing for interviews, conducting them, or simply want to level up your Python, this talk is a practical and enlightening lens into how Python is evaluated in the wild.", "description": "### Outline\r\n#### 1. Introduction (3 mins)\r\nQuick personal intro and experience interviewing hundreds of Python candidates.\r\nA reflection on patterns that separates surface-level knowledge from deep understanding.\r\n\r\n#### 2. What Makes a Candidate Stand Out? (5 mins)\r\nWhy fundamentals trump frameworks.\r\nReal examples of impressive answers from unexpected candidates.\r\nHow \u201cthinking in Python\u201d looks different from just \u201ccoding in Python\u201d.\r\n\r\n#### 3. Pitfalls and Concepts That Trip People (10 mins)\r\nVarious examples, where each example includes a short scenario or quiz, audience poll, and discussion.\r\n\r\n#### 4. Understanding the intention behind question/concept (5 mins)\r\nWhat an interviewer looks in a candidate during an interview.\r\nUnderstanding the hidden question and the intention.\r\nPatterns and follow up.\r\n\r\n#### 5. Case Studies\r\nReal life stories and examples.\r\nSurprises, Pitfalls and Patterns.\r\n\r\n#### 6. Conclusion", "recording_license": "", "do_not_record": false, "persons": [{"guid": "b21226c5-bb03-52f1-b1f5-a82049caccbd", "id": 228, "code": "HNKYMS", "public_name": "Vivek Keshore", "avatar": null, "biography": "I am a Python Enthusiast who loves building software applications and education related content. I am a technology professional and a passionate programmer with 12 years of experience in Python & Python related technologies. I am currently working as Software Architect at EPAM India.\r\n\r\nI have been involved with multiple professional projects in various industrial domains and technical fields. My expertise is in application development, data processing & analysis, data pipelines, non-relational and relational databases, Python, FastAPI, Flask, Celery, Redis, AWS, Airflow, GreatExpectations, Docker, and various other tech stacks. I am also an open source contributor, and published self developed libraries on PyPI. I love creating libraries and various utility tools that help me in solving a challenge/problem that could also be used by others in the developers community.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Track 3": [{"url": "https://cfp.in.pycon.org/2025/talk/UYF3PD/", "id": 103, "guid": "6e186441-e2b6-541d-8fb6-f802c1c331f9", "date": "2025-09-13T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-103-lint-like-lightning-deploy-like-a-ninja-ruff-dagger-in-action", "title": "Lint Like Lightning, Deploy Like a Ninja: Ruff + Dagger in Action", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Talk", "language": "en", "abstract": "Modern Python developers face two critical challenges: **slow, fragmented toolchains** for code quality checks and **complex, inflexible CI/CD workflows. In this talk, we\u2019ll combine **Ruff**** (a Rust-powered, **100x faster linter**) with **Dagger** (a portable CI/CD engine you code in Python) to revolutionize DevOps workflows. Learn how to replace legacy tools like flake8, isort, and Jenkins with a unified, **Python-native pipeline that lints, tests, and deploys code faster**\u2014while cutting CI costs by 50% or more. We\u2019ll demo a real-world workflow where Ruff and Dagger automate everything from pre-commit checks to Kubernetes deployments, all defined in Python. Whether you\u2019re managing monoliths or microservices, leave with actionable strategies to eliminate toolchain friction and ship code with confidence.\r\n**Community-Driven Innovation: Highlight tools built by Python developers for Python developers, with open-source collaboration at their core.**", "description": "### *Talk Outline*  \r\n*1. The Problem: Why DevOps Feels Broken* (5 mins)  \r\n- Slow, fragmented toolchains: flake8 + isort + black = 10-minute linting.  \r\n- CI/CD lock-in: Jenkins/GitHub Actions YAML hell, lack of portability.  \r\n- Rising cloud costs from inefficient pipelines.  \r\n\r\n*2. The Solution: Ruff + Dagger* (10 mins)  \r\n- *Ruff*:  \r\n  - Blazing-fast linting (Rust-powered, 100x speedup).  \r\n  - Unify linting, formatting, and imports in one tool.  \r\n- *Dagger*:  \r\n  - CI/CD pipelines as Python code (no more YAML).  \r\n  - Portable across GitHub Actions, CircleCI, and local machines.  \r\n\r\n*3. Integration Demo: From Linting to Deployment* (15 mins)  \r\n  - Replace flake8/isort with Ruff in a pre-commit hook.  \r\n  - Build a Dagger pipeline in Python to:  \r\n    1. Parallelize linting, testing, and Docker builds.  \r\n    2. Writing Dagger pipelines in Python (no YAML)\r\n- *Use Cases*:    \r\n  - Microservices: Reuse pipelines across projects.\r\n\r\n*4. Results & Benefits* (5 mins)  \r\n- *Metrics*: 90% faster linting, 50% lower CI costs (real-world examples).  \r\n- *Developer Happiness*: Less YAML, more Python.  \r\n- *Portability*: Run the same pipeline on your laptop or AWS.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "27c9700d-ccf8-5008-8cd4-d6be69d3ebe0", "id": 87, "code": "NZ39PX", "public_name": "Urvashi Choubey", "avatar": null, "biography": "Cloud Engineer with 1.5+ years at FICO specializing in infrastructure automation, GitOps, and Kubernetes. Active contributor to Kubernetes community as member of v1.33 Release Team. Outside of work, I have a passion for painting and traveling.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/WD9VWP/", "id": 216, "guid": "ac7f5da7-2318-52c6-9586-9a28f43cad0c", "date": "2025-09-13T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-216-data-morph-a-cautionary-tale-of-summary-statistics", "title": "Data Morph: A Cautionary Tale of Summary Statistics", "subtitle": "", "track": "Python in Research and Education", "type": "Talk", "language": "en", "abstract": "Statistics do not come intuitively to humans; they always try to find simple ways to describe complex things. Given a complex dataset, they may feel tempted to use simple summary statistics like the mean, median, or standard deviation to describe it. However, these numbers are not a replacement for visualizing the distribution.\r\n\r\nTo illustrate this fact, researchers have generated many datasets that are very different visually, but share the same summary statistics. In this talk, I will discuss [Data Morph](https://github.com/stefmolin/data-morph), an open source package that builds on previous research using simulated annealing to perturb an arbitrary input dataset into a variety of shapes, while preserving the mean, standard deviation, and correlation to multiple decimal points. I will showcase how it works, discuss the challenges faced during development, and explore the limitations of this approach.", "description": "1. Summary statistics aren't enough (10 minutes)\r\n    - Walk through various commonly used summary statistics and why they don't tell you anything about the distribution of the data, with visual examples\r\n    - Some people may learn about statistics they have never heard about (no equations, just descriptions of what they mention): moments, kurtosis, skewness.\r\n    - Anscombe's Quartet, Datasaurus Dozen, \"A hypothesis is a liability\" experiment\r\n2. Introduction to the Data Morph Python package I built (10 minutes)\r\n    - Explain the gaps it fills\r\n    - Show fun example\r\n    - Code samples for installation and morphing\r\n    - Discuss shape creation, sizing, and positioning\r\n    - Discuss new ideas that make this a possible extension of the previous research\r\n3. Limitations and future work (5 minutes)\r\n    - Show some of the things that could be improved.\r\n    - Discuss why those occur\r\n4. Lessons learned (3 minutes)\r\n    - Discuss my experience extending external research\r\n    - Discuss a little bit of what it takes to start an open source project\r\n    - Some helpful resources for what I needed to learn how to do\r\n    - Closing remarks", "recording_license": "", "do_not_record": false, "persons": [{"guid": "1e98b88d-d66b-5db7-92ca-f0f77a96c514", "id": 194, "code": "VEUJHT", "public_name": "Stefanie Molin", "avatar": null, "biography": "[Stefanie Molin](https://stefaniemolin.com) is a software engineer at Bloomberg in New York City, where she tackles tough problems in information security, particularly those revolving around data wrangling/visualization, building tools for gathering data, and knowledge sharing. She is also a core developer of [numpydoc](https://github.com/numpy/numpydoc) and the author of \u201c[Hands-On Data Analysis with Pandas: A Python data science handbook for data collection, wrangling, analysis, and visualization](https://www.amazon.com/Hands-Data-Analysis-Pandas-visualization/dp/1800563450),\u201d which is currently in its second edition and has been translated into Korean and Chinese. She holds a bachelor\u2019s of science degree in operations research from Columbia University's Fu Foundation School of Engineering and Applied Science, as well as a master\u2019s degree in computer science, with a specialization in machine learning, from Georgia Tech. In her free time, she enjoys traveling the world, inventing new recipes, and learning new languages spoken among both people and computers.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/K3L9GZ/", "id": 165, "guid": "d808f114-b007-510a-ae3f-92c184560280", "date": "2025-09-13T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-165-breaking-down-data-silos-enterprise-data-automation-with-python-on-azure", "title": "Breaking Down Data Silos: Enterprise Data Automation with Python on Azure", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Talk", "language": "en", "abstract": "Tired of data silos and manual Excel reports? Discover how we leveraged Python and Azure Data Lake to build a central data platform, integrating 20+ systems and automating 500+ reports. Learn practical strategies for achieving a single source of truth and empowering data-driven decisions across your enterprise.", "description": "- The Pain Point: Life Before Centralization\r\n\r\nIllustrating the challenges of data silos and manual reporting.\r\nHighlighting the inefficiencies and inconsistencies of relying on disparate Excel reports.\r\nEmphasizing the lack of a single source of truth and its impact on decision-making.\r\n\r\n- The Azure and Python Solution: Our Journey\r\n\r\nIntroducing the strategic decision to adopt Azure Data Lake.\r\nExplaining the rationale behind choosing Python as the primary application language.\r\nShowcasing the initial architecture and key components of the data platform.\r\n\r\n- Building the Central Nervous System: Integrating 20+ Systems \r\n\r\nDiscussing the challenges and solutions involved in connecting diverse enterprise systems.\r\nHighlighting the role of Python libraries and Azure services in data ingestion and transformation.\r\nProviding examples of the types of systems integrated (e.g., ERP, Internal Applications, other tools).\r\n\r\n - Democratizing Data: Automating 500+ Reports\r\n\r\nExplaining the process of building automated reporting pipelines with Python.\r\nShowcasing the tools and techniques used for data visualization and delivery.\r\nIllustrating the impact of centralizing and automating report generation across departments.\r\n\r\n- The Tangible Benefits: A Data-Driven Transformation\r\n\r\nQuantifying the impact of the centralized data platform (e.g., time savings, improved accuracy, faster decision-making).\r\nDiscussing the cultural shift towards data-driven decision-making within the company.\r\nSharing lessons learned and best practices for implementing similar solutions.\r\n\r\n - Looking Ahead: Future Scalability and Innovation\r\n\r\nBriefly outlining future plans for the data platform on Azure.\r\nDiscussing potential advancements and new use cases leveraging Python.\r\nOpen Q&A.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "0b8fadcf-6f8d-55d4-813f-3ca2abfeedd4", "id": 146, "code": "B8YV9C", "public_name": "Aakash Khandelwal", "avatar": null, "biography": "Hi I`m Aakash. A seasoned Analytics Lead and Data Professional with over 8 years at Nagarro, currently a Staff Consultant. Proven expertise in building and leading data initiatives, particularly in enterprise data integration on Microsoft Azure Data Lake and leveraging Python for automation. Successfully transitioned organizations from data silos to centralized, data-driven environments, managing large-scale reporting and contributing to strategic decision-making with CXOs.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/9WUFNR/", "id": 167, "guid": "039fefd0-c687-570f-a7aa-656562f2a002", "date": "2025-09-13T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-167-memory-management-in-python-foundations-problems-and-modern-techniques", "title": "Memory Management in Python: Foundations, Problems, and Modern Techniques", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Memory management in Python is mostly automatic - but not invisible. From reference cycles and unexpected leaks to costly object growth and GC pauses, memory issues still affect real-world Python applications. Understanding how Python allocates, tracks, and reclaims memory is key to writing efficient and predictable programs - especially for long-running services, data-heavy scripts, or performance-sensitive tools.\r\n\r\nThis talk starts from first principles - how reference counting and garbage collection work - then builds up to real-world issues like circular references, hidden object retention, and finalizer behavior. We\u2019ll explore modern tools like tracemalloc and pympler for memory diagnostics, and cover practical techniques like using __slots__, generators, and object reuse patterns. A live demo will walk through detecting and fixing a subtle memory leak. The goal is to make memory behavior in Python understandable, measurable, and improvable.", "description": "1. Introduction: Why Memory Management Still Matters (2 min)  \r\n   - Python automates memory - but **hidden issues** still surface  \r\n   - Leaks and growth affect performance, stability, and cost  \r\n\r\n2. Foundations: How Does Python Track Objects? (3 min)  \r\n   - *Reference counting* and basic *garbage collection*  \r\n   - Why some objects don\u2019t get freed automatically  \r\n\r\n3. Common Problems: Where Does Memory Go Wrong? (4 min)  \r\n   - *Circular references*, long-lived containers, and object retention  \r\n   - **Leaks** from closures, caches, and global state  \r\n\r\n4. Under the Hood: What Else Affects Object Cleanup? (3 min)  \r\n   - Finalizers (`__del__`) and their caveats  \r\n   - *Generational GC* and collection thresholds  \r\n\r\n5. Modern Tools: How to See What\u2019s Happening in Memory? (3 min)  \r\n   - Using `tracemalloc` to **trace** allocations and diffs  \r\n   - Inspecting live objects with `pympler` and `gc` module  \r\n\r\n6. Practical Techniques: How to Reduce Memory Footprint? (3 min)  \r\n   - Use of *generators* and streaming  \r\n   - **Saving memory** with `__slots__`, object reuse, and data structures  \r\n\r\n7. Demo: Can We Catch a Real Memory Leak? (4 min)  \r\n   - **Walkthrough**: small script with growing memory  \r\n   - Fixing the issue using diagnostic tools  \r\n\r\n+ Q&A (3 min)", "recording_license": "", "do_not_record": false, "persons": [{"guid": "0c7b5956-a33a-56c6-9755-f30eb3fbfd98", "id": 147, "code": "GZANZJ", "public_name": "Jithu Sunny", "avatar": null, "biography": "Jithu is an Associate Product Architect at KeyValue Software Systems, based in Kerala. He works primarily on backend systems, with experience in both enterprise environments and freelance projects. With experience spanning ERP systems to modern cloud-native applications, he focuses on building scalable, maintainable systems using Python, Go, and related technologies. Jithu values clean architecture, practical design, and developer ergonomics.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/QMZXPU/", "id": 19, "guid": "8f5ae66e-d5a2-5bd7-8f80-c38f162528da", "date": "2025-09-13T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-19-boundaries-of-multi-agent-systems", "title": "Boundaries of multi agent systems", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "When you let multiple AI agents collaborate, things can get powerful\u2014and messy. How do you decide what each agent should handle? What happens when they step on each other's toes or hit performance walls? This talk dives into those questions, drawing from real-world lessons we learned while building TestZeus Hercules, the first open-source testing agent.\r\nWe\u2019ll break down what happens when agents \"chat\", share tasks, and manage memory together. You\u2019ll hear about the unexpected challenges\u2014like agents clashing over decisions, coordination failures, or struggling with deterministic behavior\u2014and how we tackled them.\r\nThis session is for developers who want to go beyond the basics of AI agents and understand their limits. You\u2019ll walk away with practical strategies for setting clear boundaries, improving collaboration between agents, and designing systems that scale without falling apart. If you\u2019re building AI-powered tools or just curious", "description": "**Outline: Boundaries of Multi-Agent Systems**\r\n\r\n1. **Introduction: Why Boundaries Matter in Multi-Agent Systems** *(5 minutes)*  \r\n   - Quick story: The unexpected challenges we faced while building *TestZeus Hercules*  \r\n   - Why defining boundaries is critical for multi-agent systems  \r\n   - What attendees can expect to learn from this session  \r\n\r\n2. **Breaking Down Multi-Agent Systems: How They Work Together** *(5 minutes)*  \r\n   - Core components of an AI agent: routers, skills, and memory  \r\n   - How agents interact and share tasks in a collaborative system  \r\n   - Real examples from *TestZeus Hercules*: Coordinating tasks across multiple agents  \r\n\r\n3. **Where Things Break: The Real-World Challenges of Agent Collaboration** *(7 minutes)*  \r\n   - **Coordination Failures:** When agents clash or overlap on tasks  \r\n   - **Conflicting Goals:** Handling disagreements between agents\u2019 outputs  \r\n   - **Resource Limits:** Memory, processing power, and execution bottlenecks  \r\n   - **Deterministic Failures:** When agents produce inconsistent results  \r\n\r\n4. **Setting Boundaries: Defining Clear Roles and Responsibilities** *(5 minutes)*  \r\n   - How to assign specific tasks to agents and avoid overlap  \r\n   - Using structured communication to prevent conflicts  \r\n   - Memory and resource management to keep agents efficient  \r\n\r\n5. **Lessons from Hercules: What Worked (and What Didn\u2019t)** *(5 minutes)*  \r\n   - Key takeaways from developing the open-source *TestZeus Hercules*  \r\n   - Code snippets and examples from the Hercules GitHub repo  \r\n   - Practical solutions we discovered for real-world multi-agent challenges  \r\n\r\n6. **Scaling Multi-Agent Systems Without Breaking Them** *(3 minutes)*  \r\n   - Strategies for building scalable and reliable agent architectures  \r\n   - Future-proofing your systems with clear design boundaries  \r\n\r\n7. **Q&A and Final Thoughts** *(5 minutes)*  \r\n   - Open floor for developer questions and real-time discussions  \r\n   - Final thoughts on the future of multi-agent systems and AI-powered collaboration  \r\n\r\n---\r\n\r\n**Key Takeaways for Attendees:**  \r\n- Understand the core structure and interactions of multi-agent systems  \r\n- Learn how to set clear boundaries for tasks, communication, and memory  \r\n- Get practical strategies to avoid common coordination and scalability pitfalls  \r\n- Explore real examples from *TestZeus Hercules* and apply lessons to your own projects", "recording_license": "", "do_not_record": false, "persons": [{"guid": "328f4157-a7ce-5a7e-b012-2863ae5eb119", "id": 10, "code": "KMYPEQ", "public_name": "robin gupta", "avatar": null, "biography": "Robin is the human at the helm for TestZeus, the company behind world's first open source testing agent. He is a versatile engineering leader with more than 15 years of experience in software delivery across startups, scale-ups and enterprises. He is a System 1 thinker, and has led products contributing to $10M ARR. With a metrics-driven approach, he has elevated engineering maturity of product teams for diverse domains such as BFSI, EdTech, Retail, and Developer Experience. Beyond work, he mentors at ADPList and Plato, contributes to open-source projects like Selenium and has authored books and international courses on software testing. He is also a recognized speaker at international events such as Dreamforce (by Salesforce) and Selenium Conference.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/T3QYZX/", "id": 198, "guid": "f9ba16bf-a304-5cff-83e5-481174152e3c", "date": "2025-09-13T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-198-compiling-python-to-wasm", "title": "Compiling Python to WASM", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Python is one of the most popular programming languages in the world. But when it comes to running in the browser, it still lags behind. Existing solutions like Pyodide and RustPython attempts to bridge the gap using CPython or transpilation, but they come with significant trade-offs: large payload sizes, slow startup times, and compatibility constraints.\r\n\r\nThis talk explores the current Python + WebAssembly (WASM) ecosystem and its limitations. We\u2019ll look at how projects like Pyodide, PyScript, and RustPython attempt to make Python web-native and why they fall short. Then, we\u2019ll dive into why a native Python-to-WASM compiler is the missing piece and how such a compiler could radically improve performance, portability, and adoption.\r\n\r\nWe wrote a native python to wasm compiler, called Waspy, which we'll talk about and how various python components and types are compiled and placed.", "description": "1. Introduction (3 mins)\r\n- The rise of WebAssembly: performance + portability\r\n- Python\u2019s popularity vs its absence in web-native environments\r\n\r\n2. The State of Python on the Web Today (7 mins)\r\n- Overview of major approaches:\r\n  - Pyodide (CPython compiled to WASM)\r\n  - PyScript\r\n  - RustPython on WASM\r\n- Pros and cons of each approach\r\n- Benchmarking for each\r\n\r\n3. Why These Solutions Fall Short (4 mins)\r\n\r\n4. Making the Case for a Native Python-to-WASM Compiler (8 mins)\r\n- What \u201cnative\u201d compilation means\r\n- Benefits\r\n- Current Solution: py2wasm with small demo of compiling and running using a wasm runtime.\r\n\r\n5. Waspy (4 mins)\r\n- Where py2wasm falls short\r\n- Why we need a pure python to wasm native compiler\r\n\r\n6. Closing Thoughts and Call to Action (2 mins)\r\n- A vision for Python as a first-class citizen in the browser\r\n- Call for contributors and researchers\r\n- Q/A", "recording_license": "", "do_not_record": false, "persons": [{"guid": "f72772fa-1423-54ae-bc25-e1f61ff9a988", "id": 4, "code": "CSBPMS", "public_name": "Kumar Anirudha", "avatar": null, "biography": "Product and Tech consultant", "answers": []}, {"guid": "391b1805-7f1e-5fc1-936a-7e929208d23f", "id": 179, "code": "PTNTXY", "public_name": "Farhaan Bukhsh", "avatar": null, "biography": "Farhaan Bukhsh is an open-source contributor, Pythonista and now a newbie rustacean. With a background in cloud infrastructure and platform engineering, Farhaan has contributed extensively to projects like Fedora and Open edX, where he is a core committer and current release manager. He's passionate about bridging the performance gap between Python and system-level programming, recently exploring the power of Rust to accelerate machine learning workflows. When he's not writing code, Farhaan enjoys mentoring new contributors, organizing tech communities, and brewing the perfect pour-over coffee.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ZCLJ7U/", "id": 20, "guid": "aee13732-37de-5506-8180-4310035d778e", "date": "2025-09-13T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-20-automating-license-copyright-scanning-in-ci-pipelines-with-fossology", "title": "Automating License & Copyright Scanning in CI Pipelines With FOSSology", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Talk", "language": "en", "abstract": "As CI/CD pipelines grow in popularity, maintaining compliance with open-source licenses and copyrights is crucial. This session presents a new initiative to integrate FOSSology\u2019s mature scanning tools directly into CI/CD workflows. We'll explore how a Docker image, designed to work with GitHub Actions, GitLab CI, and Travis CI, automates license and copyright checks early in the development process. \r\nThe session will cover technical details on repository, tag, and dependency scanning, along with customization options. Attendees will learn how this solution enhances security and compliance in cloud-native environments without compromising development speed. \r\nThis talk will be particularly valuable for DevOps engineers, compliance officers or anyone trying to avoid the hassle of scanning through the whole code for licenses or copyrights. This can be easily integrated in existing modern development workflows via our Github Action, called FOSSOps.", "description": "Introduction: The Growing Need for Automated Compliance\r\nWith the increasing use of open-source software, ensuring license compliance is essential. Traditional compliance checks are manual, time-consuming, and prone to errors, often becoming last-minute roadblocks before releases.\r\n\r\nAs CI/CD pipelines accelerate software development, compliance must keep pace. Ignoring it can lead to legal risks, security vulnerabilities, and reputational damage. The ideal solution is to integrate compliance directly into the development workflow, making it a continuous, automated process rather than an afterthought.\r\n\r\nFOSSology CI Scanners solve this problem by embedding automated license and copyright checks into CI/CD pipelines. Using FOSSOps, a GitHub Action designed for compliance enforcement, developers can seamlessly integrate FOSSology\u2019s mature scanning tools into their workflows, ensuring every commit and pull request undergoes verification.\r\n\r\nIn this session we will take a look at how we can reduce hours/days of manual checks for License Compliance to a few minutes with FOSSology. We will see different configuration options and tools that help cover all the different edge cases and compliance needs. Then we will discuss the technical aspects of how FOSSology works and how it is amalgamated into the CI environments. Then we will see a small live demonstration walk through a real-world example, showing how FOSSOps scans a sample repository and generates compliance reports.\r\n\r\n\r\nUnderstanding FOSSology and Its Role in CI/CD\r\n\r\nFOSSology is an open-source software compliance tool that provides license detection, copyright scanning, and dependency analysis. Originally designed as a standalone tool, FOSSology has evolved to support automation within CI/CD pipelines, eliminating the need for separate compliance audits.\r\n\r\nBy integrating FOSSology scanners into GitHub Actions, GitLab CI, and Travis CI, developers can enforce compliance without disrupting their existing workflows. This solution aligns with modern DevSecOps practices, combining security, compliance, and development speed.\r\n\r\nFOSSology CI Scanners operate within a Docker-based environment, making it easy to deploy across different CI/CD platforms. The scanning process follows a structured workflow:\r\nTriggering the Scan: The scanner is invoked automatically when a new commit, pull request, or scheduled job is executed in the CI/CD pipeline.\r\nScanning Repository Contents: The tool analyzes all files, including source code, documentation, and binaries, to detect potential licensing issues.\r\nDependency and Tag Scanning: Third-party libraries and dependencies are examined to ensure they comply with licensing policies.\r\nGenerating Compliance Reports: The scanner outputs detailed reports that highlight detected licenses, possible conflicts, and areas requiring attention.\r\n\r\n\r\nThis automated process runs in parallel with the development cycle, ensuring that compliance is continuously enforced without slowing down deployment timelines.\r\n\r\nLive Walk Through: Implementing FOSSOps in CI/CD Pipelines\r\n\r\nFor teams using GitHub Actions, integrating FOSSOps is straightforward. Developers need to define a GitHub Actions workflow file that includes the FOSSology scanner. This workflow can be configured to run on every commit or at scheduled intervals, ensuring that license compliance is always up to date.\r\n\r\nSample Github Actions Workflows are available on FOSSology\u2019s repo:\r\n\r\nIn addition to this, FOSSology supports Gitlab CI and Travis CI.\r\n\r\nCustomization for your needs:\r\n\r\nCustom License Detection: Teams can define their own rules for detecting specific licenses or flagging certain keywords.\r\nFine-Tuning Scans: Developers can exclude certain files, directories, or dependencies from the scan to reduce false positives.\r\nIntegration with DevSecOps Tools: The scanner can work alongside SBOM (Software Bill of Materials) tools and vulnerability scanners to provide a holistic security and compliance solution.\r\nUsers can scan only certain parts of the directories using directory-scan feature.\r\n\r\nAutomating compliance with FOSSology CI Scanners provides several key advantages:\r\n\r\nPreventing Legal and Security Risks Early: By scanning software dependencies and source code in real-time, teams can avoid costly violations related to GPL, MIT, Apache, BSD, and other open-source licenses.\r\nEnhancing Security in Cloud-Native Environments: Ensuring compliance before deployment reduces the risk of shipping non-compliant or vulnerable code to production.\r\nBalancing Compliance with Development Speed: Unlike manual audits, automated scanning runs asynchronously, allowing developers to focus on writing code while compliance happens in the background.\r\n\r\nWith these benefits, organizations can enforce compliance without compromising agility, aligning with the principles of secure software development.\r\n\r\nSuccess Stories:\r\nSeveral organizations including Redhat successfully implemented FOSSology CI Scanners in their workflows, leading to faster compliance verification, reduced manual effort, and improved security posture.\r\n\r\n<Q&A and Hands-On Participation>\r\n\r\nThe session will conclude with an open discussion where attendees can ask questions, share challenges, and explore best practices for implementing automated compliance in their workflows. A hands-on setup walkthrough will be provided for those who want to try out FOSSOps during the session.\r\n\r\nKey takeaways from the session:\r\n\r\nTake license compliance seriously.\r\nReduce manual effort in compliance using FOSSology.\r\nLive Long and Prosper. \ud83d\udd96\r\n\r\nJoin Us: FOSSology is Free and Open Source. Join our community: \r\ngithub.com/fossology\r\nSlack: https://fossology.slack.com/join/shared_invite/enQtNzI0OTEzMTk0MjYzLTYyZWQxNDc0N2JiZGU2YmI3YmI1NjE4NDVjOGYxMTVjNGY3Y2MzZmM1OGZmMWI5NTRjMzJlNjExZGU2N2I5NGY#/shared-invite/email", "recording_license": "", "do_not_record": false, "persons": [{"guid": "cd3b7cc2-73f0-59d0-b7ec-c170f7a3b74a", "id": 18, "code": "VSQQM3", "public_name": "Rajul Jha", "avatar": null, "biography": "Open Source Contributor. Google Summer of Code '24 and '25 @FOSSology\r\nPythonista.", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 3, "date": "2025-09-14", "day_start": "2025-09-14T04:00:00+05:30", "day_end": "2025-09-15T03:59:00+05:30", "rooms": {"Track 1": [{"url": "https://cfp.in.pycon.org/2025/talk/PBLWQR/", "id": 28, "guid": "a19c7ad1-8e33-5852-8da3-3b3d87681515", "date": "2025-09-14T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-28-compute-scaling-methods-at-inference-time", "title": "Compute-scaling methods at inference time", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Large language models (LLMs) don\u2019t always need to be bigger to be better\u2014sometimes, they just need to think more efficiently. Inference-time compute scaling improves LLM reasoning by dynamically increasing computational effort during inference, similar to how humans perform better when given more time to think. This session will explore cutting-edge techniques like Chain-of-Thought (CoT) prompting, voting-based search, and the latest research in test-time scaling. We\u2019ll dive into methods like \u201cWait\u201d tokens, preference optimization, and dynamic depth scaling, which allow models to refine responses on the fly. Whether you're interested in boosting LLM accuracy, improving robustness, or optimizing compute budgets, this talk will provide key insights into the future of smarter, more adaptable AI.", "description": "Session Breakdown\r\n\r\n1. Introduction: Why Scaling Compute at Inference Matters\r\nThe challenge: LLMs often struggle with complex reasoning tasks.\r\nThe traditional approach: Scaling model size vs. scaling inference-time compute.\r\nThe key idea: Letting models \u201cthink harder\u201d rather than just making them bigger.\r\n\r\n2. Core Techniques for Inference-Time Scaling\r\nChain-of-Thought (CoT) prompting \u2013 guiding models to reason step by step.\r\nVoting-based methods (Self-Consistency, Majority Voting) \u2013 leveraging multiple generations to improve answers.\r\nTest-time scaling strategies \u2013 making LLMs more adaptable without retraining.\r\n\r\n3. Emerging Techniques and Research Insights\r\n\u201cWait\u201d tokens & adaptive compute \u2013 dynamically adjusting processing power based on task complexity.\r\nPreference optimization \u2013 refining responses using feedback loops at inference.\r\nDynamic depth scaling \u2013 allocating more compute to harder questions.\r\n\r\n4. Practical Applications & Trade-offs\r\nWhen to use inference-time scaling vs. pre-training improvements.\r\nComputational costs and latency considerations.\r\nReal-world use cases: Where these methods make the biggest impact.\r\n\r\n5. Future of Smarter LLMs\r\nThe shift from static models to adaptive, reasoning-driven AI.\r\nOpen research questions and challenges ahead.\r\nWhat\u2019s next: Opportunities for improving efficiency and accuracy.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "f8ff9785-3f88-57f4-b709-6c054978fcc7", "id": 24, "code": "AQNZ9G", "public_name": "Rutvik Acharya", "avatar": null, "biography": "Applied ML Scientist with over 13 years of experience working on scalable and impact driven ML and LLM Solutions.", "answers": []}, {"guid": "4fab898a-f994-58d5-a723-6069c5cad4ac", "id": 23, "code": "CNURCP", "public_name": "Nitin Agarwal", "avatar": null, "biography": "**Data Science, ML, and AI | Ex-Microsoft | Mentor | Speaker**  \r\n\r\n**About Me**  \r\n**Principal Data Science and AI Leader** with **13+ years of experience** in building impactful intelligent solutions across various domains. Skilled in leading **large-scale projects**, guiding **cross-functional teams**, and fostering a **culture of innovation and excellence**.  \r\n\r\n**Expertise in:**  \r\n- **Machine Learning, Natural Language Processing, and Generative AI**  \r\n- Driving **business growth** and **operational efficiency**  \r\n- Enhancing **customer satisfaction** through cutting-edge AI solutions  \r\n\r\n**Proven Track Record: **  \r\n- Recognized for **strong leadership** and **strategic thinking**  \r\n- Passionate about **mentoring future talent**  \r\n- Frequent **speaker and thought leader** in the data science community  \r\n- **Numerous accolades** for innovation and excellence  \r\n\r\n**Let's connect!**  \r\n\ud83d\udd17 **LinkedIn:** [https://www.linkedin.com/in/agnitin/](https://www.linkedin.com/in/agnitin/)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "d56ad54f-60d4-5d05-9e0d-5faeee65be04", "date": "2025-09-14T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-343-5-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/PFJVQJ/", "id": 67, "guid": "b7cf8c0f-5ed4-5202-974d-1c99c6de17af", "date": "2025-09-14T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-67-engineering-custom-diffusion-workflows-with-comfyui-a-developer-s-guide", "title": "Engineering Custom Diffusion Workflows with ComfyUI: A Developer's Guide", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "As a developer trying to iterate on SDXL prompts and schedulers, I found script-based tools painful to debug. ComfyUI addresses this challenge by offering a powerful, modular, and open-source visual programming environment tailored for AI image generation and experimentation. This session will introduce ComfyUI as a serious developer tool for building, debugging, and optimizing Stable Diffusion pipelines. With node-based execution graphs, real-time previews, and complete control over every parameter and model component, ComfyUI enables reproducibility, rapid prototyping, and extensibility for technical users. We\u2019ll explore how developers can build custom inference workflows, integrate APIs, deploy on cloud GPUs, and contribute custom nodes to the growing ecosystem. Whether you're optimizing inference, conducting A/B testing, or building a generative AI backend, this session shows why ComfyUI is an essential tool for ML practitioners and engineers.", "description": "Introduction to ComfyUI\r\n\r\nWhy It Matters:\r\n- Enables visual DAGs for complex AI workflows\r\n- Reproducible and inspectable pipeline execution\r\n- Ideal for experimentation, debugging, and deployment\r\n- A developer-friendly alternative to black-box UIs\r\n\r\nComparison with Other Tools:\r\n- CLI/scripts: Precise but opaque and hard to share\r\n- Automatic1111 / InvokeAI: Good for artists, limited for devs\r\n- ComfyUI: Modular, programmable, and deeply customizable\r\n\r\nCore Architecture & Capabilities:\r\n- Visual interface built on Directed Acyclic Graphs\r\n- Stateless, parameterized node execution\r\n- Supports SDXL, ControlNet, LoRA, and FLUX\r\n- Intermediate visualizations and debug-friendly tools\r\n\r\nDeveloper Use Cases:\r\n- Build and iterate on inference pipelines with modular nodes\r\n- Share or deploy workflow templates\r\n- Experiment with samplers, schedulers, and conditioning models\r\n\r\nOptimization & Deployment:\r\n- Run on local GPUs or cloud platforms (Colab, RunPod, Lambda Labs)\r\n- VRAM optimization via offloading and fp16 precision\r\n- Automate workflows via batch processing or API integration\r\n\r\nExtensibility & Ecosystem:\r\n- Write custom nodes in Python with PyTorch\r\n- Contribute to an open-source community with clear guidelines\r\n- Integrate with FastAPI, Streamlit, or orchestration tools\r\n\r\nConclusion:\r\nComfyUI is an ideal frontend/backend for building, experimenting with, and deploying diffusion-based generative models. Its flexibility makes it a powerful tool for Python developers in AI, ML, and creative domains.\r\n\r\nQ&A or Demo:\r\nIf hardware permits, a live walkthrough of building a diffusion pipeline using ComfyUI.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "5fd89316-78a1-58bb-a077-1ecb1b0adb80", "id": 28, "code": "Y9FK9M", "public_name": "shreya kommuri", "avatar": "https://cfp.in.pycon.org/media/avatars/Y9FK9M_J0SAK6W.png", "biography": "I'm an AI Developer with a Master's in Physics and a strong focus on computer vision, image generation, and applied AI in e-commerce. My current work blends rule-based logic, probabilistic modeling, and reinforcement learning to design adaptive templates for ad creatives. I also build tools using ComfyUI, pushing the boundaries of generative image workflows.\r\n\r\nOutside of work, I\u2019m interested in how AI can make design and content creation more accessible  especially for small businesses that don't have big creative teams. This is my second time attending PyCon, and I\u2019m looking forward to sharing practical insights and learning from others building with intent and creativity.", "answers": []}, {"guid": "d3ceb715-5e65-5d86-a303-fe619b3e7fb3", "id": 142, "code": "ZNVLP9", "public_name": "siddhi kommuri", "avatar": null, "biography": "AI developer working in a small, curious team focused on exploring what machines can learn from images. We tinker with models, test strange ideas, and try to teach AI to see the world a little better (or at least differently).\"", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/YY8HLK/", "id": 108, "guid": "4448a5c0-89e5-5d01-b469-c8ff1e1a768e", "date": "2025-09-14T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-108-beyond-the-basics-advanced-gil-mitigation-patterns", "title": "Beyond the Basics - Advanced GIL mitigation patterns", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Python's GIL (Global Interpreter Lock), while promising thread safety within applications, can be a limiting factor when considering the need for truly parallel CPU bound tasks without the overhead of `multiprocessing` or only the I/O concurrency which is provided by `asyncio`.\r\nIn this talk we will discuss more about how we can bypass the GIL to improve performance and writing custom routines with Cython and the powerful `nogil` directive to identify and resolve performance bottlenecks.\r\nAs the culmination of this talk, we will explore how we can use Cython and `nogil` to implement an SGD (Stochastic Gradient Descent, an algorithm crucial to Deep Learning models) and benchmark it aganist pure Python implementation and see the performance gains.", "description": "* Introduction - Introduce myself and basically cover the topic and summary of the talk and what I hope to achieve by the end of the talk.\r\n* Introduce the GIL :\r\n    * What is GIL? Why does it exist?\r\n    * The impact of execution on GIL and talk about CPython specific implementation. Might also cover other implementations like Jython or IronPython\r\n     * Why it is not suitable for certain implementations and discussion around existing methods of mitigating it - `multiprocessing` and `asyncio`\r\n* Demonstrate an example of GIL limitation with a simple python script\r\n* Advanced Mitigation strategies - talk about the different advanced strategies we can adopt to mitigate GIL limitations, like using Cython with nogil and writing custom GIL releasing extensions in Rust/C++/C etc.\r\n *Cython with `nogil` - this will be the primary topic of the talk. We'll go deep into the details of Cython.\r\n    * What is Cython, what does it do?\r\n    * What is `nogil` directive?\r\n    * A quick demo of how Cython works.\r\n    * Talk of extensibility of Cython and how it can work with `openmp` especially with the `nogil` directive.\r\n    * Talk about SGD (Stochastic Gradient Descent), where it is used and how we will be using it as an example for parallel processing. \r\n    * Show an example of SGD with python implementation, highlighting the requirement of parallel processing. Benchmark the time here.\r\n    * Show an example of SGD with Cython implementation, showing the improved performance due to the `nogil` directive.\r\n\r\n* Conclusion - Conclude the talk and summarize all that we've discussed in the talk so far, and open for Q&A", "recording_license": "", "do_not_record": false, "persons": [{"guid": "5b02368d-6f71-582c-b704-99318e4ce1ee", "id": 93, "code": "7CLBEG", "public_name": "Rohan Giriraj", "avatar": null, "biography": "I'm a Software Engineer with close to 6 years of experience, currently working at Autodesk where I design and implement high throughput data pipelines to ingest and process petabytes of data. I love to have engineering discussions around performance tuning, and optimization patterns for languages like Python which are often deemed as just \"scripting languages\". In my off-time, I go trekking, watch anime, collect watches and play videogames.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/UYRYEL/", "id": 157, "guid": "16622bf7-574a-5ccf-ba45-e969287a910b", "date": "2025-09-14T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-157-rapiddoc-a-rule-based-ai-model-fine-tuned-model-to-enforce-style-guide-rules", "title": "RapidDoc - A rule-based AI model fine-tuned model to enforce style guide rules", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Technical writers spend countless hours manually editing content to aling with organizational style guides. What if an AI could do it for you - accurately and consistently?\r\n\r\nIn this talk, I'll introduce RapidDoc, an open-source AI model fine-tuned on real-world sofwtare documentation rules to flag and rewrite violations. For example, inconsistency in terminologies used, passive vioce, ambigguous phrasing. I'll walk through how I built a premium dataset, fine-tuned flan-ts-base model, and designed a gradio-based frontend for instant feedback on .md, .docx, .adoc, .pdf files.\r\n\r\nExpect, live demos, insights into model training challenges, and a peek on hiw GenAI is reshaping the future of editorial workflows.\r\n\r\nWhether you'r an AI practitioner, a documentation lead, or a tooling enthusiast, this talk offers an edd-to-end blueprint on how I'm fine-tuning a model on real-world sofwtare documentation rules.", "description": "The Problem: Time-consuming, inconsistent manual editing of style violations in technical documents.\r\nThe Solution: RapidDoc \u2014 a fine-tuned flan-t5-base model that understands and enforces writing rules.\r\nDataset Curation: Crafting 1,000+ labeled examples with edge cases, ambiguity handling, and diverse tone/structure.\r\nModel Training: Techniques used on Colab/Kaggle, quantization choices, and tokenizer strategies.\r\nDemo Time: Gradio interface that accepts multiple file formats and outputs clean, rule-based suggestions.\r\nThe Future: Expanding to 20+ writing rules, style guide customization, and enterprise integration possibilities.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "dbb52f26-8987-5607-835d-b1f10e663a4f", "id": 141, "code": "UAD7KN", "public_name": "Gaurav Trivedi", "avatar": null, "biography": "Gaurav Trivedi is a Principal Technical Writer specializing in developer-focused content, API documentation, and AI-assisted editorial tools. He is currently building AI-powered systems that enforce style guide rules through fine-tuned language models. Gaurav is passionate about simplifying complex ideas and frequently speaks about the intersection of technical writing, AI, and automation.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/UBBJJF/", "id": 333, "guid": "0a3076af-e033-5b6f-af53-d832dfbed752", "date": "2025-09-14T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-333-edge-ml-with-micropython-tinyml-real-time-inference-on-under-500-boards", "title": "Edge ML with MicroPython + TinyML: Real-time Inference on under \u20b9500 Boards", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Machine learning is moving closer to the edge\u2014but how close can you really get with Python and a \u20b9500 board? This session dives into running real-time ML inference on ultra-low-cost microcontrollers like the ESP32 using MicroPython and TinyML. \r\n\r\nYou\u2019ll learn how to deploy models that classify audio, detect gestures, or monitor anomalies\u2014all without an internet connection, operating system, or expensive tooling. This talk demystifies edge ML by showing how Python can still play a meaningful role in deeply constrained environments. If you're working in embedded systems, edge computing, or low-power AI, this session shows how to unlock a new layer of intelligence at the edge\u2014one tiny inference at a time.", "description": "Why Edge ML Matters (5 min)\r\n- ML use cases in constrained environments: health, energy, agriculture\r\n- Why inference at the edge is essential (privacy, latency, connectivity)\r\n\r\nTinyML and Python: What\u2019s Possible? (5 min)\r\n- Overview of TensorFlow Lite for Microcontrollers (TFLite Micro)\r\n- Why Python still matters when deployment is in C\r\n- Role of MicroPython and bridging model deployment to embedded\r\n\r\nBuilding the Pipeline (10 min)\r\n- Data collection and preprocessing using MicroPython\r\n- Training models in standard Python using scikit-learn or TensorFlow\r\n- Converting and quantizing models for microcontrollers\r\n\r\nDeploying to a \u20b9500 Board (ESP32 / STM32) (5 min)\r\n- Flashing the model to the device\r\n- Using uTensor or C-compiled model blobs callable from MicroPython\r\n- Triggering inference in real-time via GPIO/sensor inputs\r\n\r\nDemos and Lessons Learned (5 min)\r\n- Real-world use case: gesture classification / anomaly detection\r\n- Limits, trade-offs, and tooling gaps in current Python-TinyML pipelines\r\n- What to automate, what to hardcode", "recording_license": "", "do_not_record": false, "persons": [{"guid": "85157cd1-cb79-55ec-b074-17c4c7c6bc79", "id": 262, "code": "33BK7Y", "public_name": "Pratik Kumar Panda", "avatar": null, "biography": "Hi, my name is Pratik Kumar Panda. I am Currently working at RedHat as an SRE. Primarly working on Openshift Dedicated and ROSA.\r\nIn my free time, you can find me building drones and hobby robots - tinkering with Raspberry Pis, Arduinos, and automation with Python", "answers": []}, {"guid": "a0043a3e-a91e-50c0-83da-e18de4658428", "id": 266, "code": "FD3TGB", "public_name": "Sneha Singh", "avatar": null, "biography": "I am currently working with Deloitte as a Software Engineer (HCSM - Infra and Cloud Management). I mainly deal with NOC and Cloud for my team.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/7T7LPL/", "id": 202, "guid": "05073e44-4b7f-53ba-939b-59d2501807e0", "date": "2025-09-14T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 1", "slug": "2025-202-python-sockets-at-scale-i-o-multiplexing-and-asyncio", "title": "Python Sockets at Scale: I/O Multiplexing and Asyncio", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Concurrency is essential for building scalable network applications, and Python offers several ways to achieve it. In this session, we\u2019ll explore Python\u2019s concurrency models through the lens of socket programming.\r\n\r\nWe\u2019ll begin with Multi-threading and examine how the Global Interpreter Lock (GIL) affects performance. Then we\u2019ll look at single-threaded alternatives using the `selectors` module, introducing the idea of an event loop and how it helps manage multiple socket connections efficiently. Finally, we\u2019ll dive into `asyncio`, to understand how it builds on these lower-level ideas to provide a high-level, structured approach to asynchronous I/O. If you\u2019re curious about how to write fast, modern, and scalable network applications in Python, this session will give you the tools and mental models to get started.\r\n\r\nTakeaways:\r\n1. Grasp Python\u2019s key concurrency models for socket programming\r\n2. Learn how `selectors` enables efficient I/O multiplexing\r\n3. Understand `asyncio` through examples", "description": "1. Introduction\r\n  - Why concurrency matters in network programming\r\n  - The challenge: handling many simultaneous socket connections\r\n\r\n2. Threads and Blocking Sockets\r\n  - How traditional multithreading handles socket connections\r\n  - The role of the GIL and its impact on concurrency\r\n  - Downsides: context switching, memory overhead, blocking, and complexity\r\n\r\n3. A Different Path: Single-threaded Concurrency with `selectors`\r\n  - Introduction to non-blocking sockets\r\n  - How the `selectors` module lets us monitor multiple sockets\r\n  - Introduction to event loop\r\n\r\n4. Introducing asyncio\r\n  - Understanding how `asyncio` builds on the same event loop idea\r\n  - Breaking down the `await` keyword, coroutines and tasks.\r\n  - Coroutines / Task as light weight user space threads\r\n  - Visualizing cooperative scheduling\r\n  - Async sockets\r\n\r\n5. Future of python concurreny: No GIL ?\r\n  - Brief discussion on NO GIL implementations of python such as numba, etc\r\n  - Upcoming changes into cpython focusing on no gil\r\n\r\n6. Wrap-Up, Q&A", "recording_license": "", "do_not_record": false, "persons": [{"guid": "e4104370-771e-5ec2-95ea-13119129b1a9", "id": 185, "code": "LEC7AY", "public_name": "Rohan Reddy Alleti", "avatar": null, "biography": "Hey everyone \ud83d\udc4b,\r\nI am a Solution Consultant at Sahaj Software, specializing in Backend Development, Cloud Computing, and bit into Retrieval-Augmented Generation (RAG) systems. I have a passion for database internals and system-level behavior, I focus on building efficient, elegant systems while exploring the interaction between hardware and software.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Track 2": [{"url": "https://cfp.in.pycon.org/2025/talk/TCVFVP/", "id": 17, "guid": "1d5548da-79d0-55e3-8977-c6d0dcebc317", "date": "2025-09-14T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-17-from-stress-to-success-load-testing-python-apps-visualizing-performance", "title": "From Stress to Success: Load Testing Python Apps & Visualizing Performance", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Join me as I share a hands-on approach to load testing Python apps with Locust and monitoring them in real time using Grafana and Prometheus. I'll show you how to simulate user behavior, identify bottlenecks, and set up clear, practical dashboards. Drawing from my experience with microservices, I\u2019ll offer real tips to help you quickly spot issues and scale your applications efficiently. This talk is designed for anyone looking to boost their app\u2019s performance with proven, straightforward techniques.", "description": "#### 1. Introduction & Problem Statement\r\n\r\nKick off with a quick intro about why load testing matters for Python applications.\r\nExplain common performance issues and the need to detect bottlenecks before production.\r\n\r\n#### 2. Overview of Tools\r\n\r\nIntroduce Locust as a tool for simulating user behavior and generating load.\r\nExplain how Prometheus collects metrics and how Grafana can be used to visualize them in real time.\r\n\r\n#### 3. Setting Up the Environment\r\n\r\nWalk through installing Locust and writing a basic test script for a Python app.\r\nShow how to configure Prometheus to scrape metrics from your application and Locust.\r\n\r\n#### 4. Building Practical Dashboards\r\n\r\nDemonstrate setting up Grafana dashboards to monitor key performance indicators during tests.\r\nDiscuss how to choose and configure the most useful metrics for troubleshooting.\r\n\r\n#### 5. Live Demonstration & Troubleshooting\r\n\r\nRun a live demo that integrates the load testing script with real-time monitoring.\r\nHighlight how to interpret the dashboards and identify performance bottlenecks.\r\nShare practical tips on what to look for and how to respond.\r\n\r\n#### 6. Real-World Insights\r\n\r\nPresent examples from actual projects, discussing issues encountered and solutions implemented.\r\nProvide actionable advice based on lessons learned from previous experiences.\r\n\r\n#### 7. Q&A and Wrap-Up\r\n\r\nOpen the floor for questions and discussion.\r\nSummarize key takeaways and provide pointers for further exploration.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "102e1562-7c01-5391-93f1-4c349e83b849", "id": 16, "code": "YFZVVR", "public_name": "Allen Y", "avatar": null, "biography": "Hi, I\u2019m Allen! I\u2019m a Product Engineer at UST, where I build GraphQL APIs for Python-based microservices that work closely with MongoDB. I\u2019m passionate about using technology to solve real-world problems and love helping my teammates and peers grow along the way. I\u2019ve spoken at the Trivandrum Python Meetup and have the exciting opportunity to speak at both PyCascades 2025 and the FOSSASIA Summit 2025 in Bangkok, where I\u2019ll be sharing my experience in Python development and API design.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/P9WYNN/", "id": 293, "guid": "b67b74e6-5ea9-5ae1-b56f-677f5b8e4814", "date": "2025-09-14T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-293-from-docker-to-deploy-smarter-k8s-for-python-developers-with-tilt-skaffold", "title": "From Docker to Deploy: Smarter k8s for Python Developers with Tilt & Skaffold", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Talk", "language": "en", "abstract": "Kubernetes offers massive power , but for most Python developers, it also brings complexity, boilerplate YAML, and a painful dev loop. This talk presents a modern, tool-driven workflow that empowers Python devs to deploy microservices to Kubernetes with zero YAML, no kubectl, and no reliance on DevOps. We\u2019ll contrast the traditional workflow with a developer-first approach using tools like Tilt and Skaffold, show how to achieve parity between local and production environments with kind/k3d, and demonstrate live reloads and fast feedback loops. Attendees will leave equipped with practical techniques to ship faster, safer, and with full autonomy.", "description": "Talk Outline\r\n\r\n1. The Developer Experience Gap with Kubernetes\r\na. The traditional Kubernetes workflow i.e. Docker \u2192 YAML \u2192 kubectl \u2192 pray , is powerful but developer-unfriendly. It involves repetitive steps, friction at every stage, and a high risk of drift between local and production environments.\r\nb. Developers are often blocked by tight coupling with operations teams, relying on them for deployments, configs, and debugging. \r\nc. Devs need autonomy, speed, confidence - not just \u201cinfra knowledge\u201d\r\n\r\n2. Developer-Centric Kubernetes: What It Looks Like \r\na. One command to spin up services\r\nb. Code-change triggers fast feedback (no full builds)\r\nc. Local clusters that mirror prod\r\nd. Live logs, port forwarding and visibility\r\n\r\n3. The Toolkit (Solution Introduction) : \u201cThere\u2019s a better way\u201d\r\nIntroduce a modern, DX-first toolchain that simplifies the cloud-native journey:\r\na. FastAPI: Developer-friendly web framework\r\nb. Docker: Familiar base layer,  everyone's comfortable here\r\nc. Skaffold or Tilt: Dev loop automation (auto-rebuild, redeploy, logs, config)\r\nd. K3s or kind: local K8s, zero cloud billing\r\nDiscuss the goal: abstract away YAML & ops overhead so devs can focus on building.\r\n\r\n\r\n4. Diving deep : Tilt for Local Dev\r\na. This section will discuss about how `Tilt` lets developers iterate locally with live reloads, automatic container rebuilds, and a clean web UI. Then elaborate on how - Using a Python-like Tiltfile,  can define builds and deploy in a few lines, enabling a faster inner dev loop and service observability.\r\nb. Demo: Live-edit a Python service deployed to kind with Tilt\r\n\r\n5. Introducing Skaffold \r\na. What is Skaffold? Lifecycle automation for K8s\r\nb. How Skaffold works: YAML config -  build, tag, deploy\r\nc. Supports Helm, Kustomize, CI/CD\r\nd. Demo: Use Skaffold to push a Python service to a cloud environment\r\ne. Discuss Benefits: Developer + CI support , Works across environments\r\n\r\n6. Tilt vs Skaffold: Which Tool, When? \r\nTilt excels at rapid local development. Skaffold shines in structured, repeatable pipelines (Dev \u2192 CI \u2192 Staging \u2192 Prod) . We\u2019ll explore when to use each tool - and how they can work together to support the entire dev-to-prod lifecycle.\r\n\r\n7. Best Practices for Python Devs Using Kubernetes \r\na. Use kind or k3d for local clusters\r\nb. Avoid handwritten YAML - generate via Helm or templates\r\nc. Automate repetitive tasks (certs, port forwards, secrets)\r\nd. Use minimal images and slim base containers\r\ne. Stay close to prod with shared configs/profiles and Get dev/prod parity without cloud costs\r\n\r\n8. Q&A and Audience Polling\r\n Open floor for questions + a fun poll on what framework attendees plan to try next.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "46957035-e053-5eb2-9d1a-08aa11315a21", "id": 248, "code": "QRDBNQ", "public_name": "Aditi Gupta", "avatar": null, "biography": "Aditi Gupta is a Software Development Engineer with a strong foundation in cloud-native technologies and AI/ML systems. A graduate of Indira Gandhi Delhi Technical University for Women - Asia\u2019s largest tech university for women , she specialises in containerisation, microservice architectures, and Kubernetes-based orchestration. Her work focuses on building secure, scalable cloud environments and exploring innovative approaches to cloud security and developer experience.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "6167498d-adda-5235-9714-2afde4943730", "date": "2025-09-14T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-343-6-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ULYRVL/", "id": 343, "guid": "0f762208-2872-56dd-9b73-a68f538145ba", "date": "2025-09-14T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-343-7-to-be-announced", "title": "To be Announced", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "description": "This is a placeholder session. This will be replaced by other talk, panel discussion, or some other activity.\r\nThere isn't much to see here at the moment, as some CFPs are still open and some speakers are yet to confirm.\r\nWant to see your session here? Submit CFP today: https://cfp.in.pycon.org/2025/cfp", "recording_license": "", "do_not_record": false, "persons": [], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/LRZZWS/", "id": 287, "guid": "2d29ecde-5e5d-5707-8f42-df8bd0eb4c59", "date": "2025-09-14T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-287-know-thy-packets-demystifying-network-fundamentals-with-scapy", "title": "Know thy packets: Demystifying network fundamentals with Scapy", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Talk", "language": "en", "abstract": "In the age of high-level frameworks and AI-driven development, it's easy to treat the network as a black box. But what *really* happens when your Python code calls `requests.get()` or communicates with a microservice? What _really_ happens, when you visit a website? This talk peels back the layers of abstraction, returning to the fundamentals of networking that power our increasingly interconnected world.\r\n\r\nWe'll embark on a journey from the familiar OSI model (remember \"Please Do Not Touch Steve's Pet Alligator\"?) to the observable reality of network packets. Using Python and the Scapy library, we will dissect the lifecycle of a simple web request. We'll witness the DNS lookup, the dance of the TCP handshake, the secure establishment of a TLS session, and the flow of HTTP/S data.\r\n\r\nForget abstract diagrams; we'll programmatically construct and inspect packets, comparing what Scapy reveals with what your browser does silently. The goal? To empower Python developers to really look at netw", "description": "- Introduction: The \"Magic\" We Rely On\r\n  - Highlight how modern development often abstracts away network details.\r\n  - Talk about why understanding these fundamentals matters now more than ever (debugging, performance, security, interacting with AI-generated code).\r\n- Recalling the basics: The OSI Model & Key Players\r\n  - A *quick* and engaging recap of the OSI model \u2013 focus on layers relevant to the talk\r\n  - Introduce the core protocols we'll encounter: DNS, TCP, TLS, HTTP/S \u2013 what role does each play at a high level? \r\n- Scenario 1: The Browser's Journey\r\n  - User types URL in a browser and hits Enter.\r\n  - Show the high-level flow:\r\n      - DNS Query/Response (getting the IP).\r\n      - TCP Handshake (SYN, SYN-ACK, ACK).\r\n      - TLS Handshake.\r\n      - HTTP GET request.\r\n      - HTTP Response.\r\n      - TCP Connection Teardown (FIN, ACK).\r\n  - Make the implicit \"magic\", explicit.\r\n- Scenario 2: Python & Scapy Take the Wheel\r\n  - **Objective:** Replicate parts of the browser's journey using Python and Scapy to *see* the packets.\r\n  - **DNS with Scapy:**\r\n      - Use Scapy to craft and send a DNS query.\r\n      - Display the raw request and response packets.\r\n  - **TCP Handshake with Scapy:**\r\n      - Briefly show how to construct SYN, ACK packets.\r\n  - **Crafting an HTTP GET Request with Scapy (over TCP):**\r\n      - Use Scapy to send a simple HTTP GET after a conceptual TCP connection.\r\n      - Display the packet. Compare to what the browser has sent.\r\n  - **Briefly Touch on TLS (Conceptual with Scapy):**\r\n      - Crafting full TLS with raw Scapy is complex, but show where TLS packets would fit.\r\n      - Reinforce the security aspect and what's being encrypted.\r\n- The broad idea is to use Scapy's dissection capabilities (`packet.summary()`, `packet.show()`, accessing specific layers like `packet[IP].src`) to highlight key fields and relate them back to the OSI model and protocol functions.\r\n- Key Takeaways & The \"Why Now\"\r\n  - Demystifying what libraries like `requests` do.\r\n  - Better debugging of network issues (timeouts, connectivity).\r\n  - Understanding the *actual* mechanics of HTTP & HTTPS and why it's secure.\r\n  - Foundational knowledge for working with distributed systems, cloud networking, and critically evaluating AI-suggested network solutions.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "23af8078-54dc-5ef3-8ebe-60d063e39e7b", "id": 236, "code": "HDPPVX", "public_name": "Shrayas", "avatar": null, "biography": "Shrayas Rajagopal heads the engineering efforts at a Logic Soft - a small organization with a large impact. Logic Soft is the only recognized software providers for the Book Trade businesses. If you have ever gone to a book store, it is very likely that Logic Soft's software is running their business behind the scenes.\r\n\r\nAt Logic Soft he is responsible for all key technical and business decisions and has set a foundation for building the next generation of web and mobile applications in the organization. He enjoys building simple and future proof software with a focus on readability and scalability. He strongly believes that new technologies are not the right way to solve problems - simple design is.\r\n\r\nPreviously at SAP Labs, he worked on a small team that helped test and build out Sentinel - an Algorithmic Trading platform on a then new gen SAP database - SAP HANA\r\n\r\nOutside of work, he enjoys running very long distances, trekking mountains or whipping up something in the kitchen.", "answers": []}, {"guid": "3517454e-5d50-54a1-b8f7-fac01e0df654", "id": 244, "code": "K9WZBP", "public_name": "Rengaraj D", "avatar": null, "biography": "I work for Intelsat. I have been using Python Since 2011. I previously worked in Integration of Embedded Linux, writing low level firmware for Arm cortex M3 based micro controllers and device interfacing using Python. Right now I am writing Python tools to Analyse system logs. \r\nAlso I am a co organizer for Chennaipy. I have been volunteering Chennaipy meetup since 2011. \r\n\r\nI never loved programming in college. Python Changed my view of programming. After learning Python I learnt c and worked in Embedded system. Python Changed my career in to right path.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/KFLSJF/", "id": 105, "guid": "fe377ae0-43b4-559a-b023-72dc0fddd787", "date": "2025-09-14T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-105-reviving-modernizing-and-packaging-unmaintained-code", "title": "Reviving, modernizing, and packaging unmaintained code", "subtitle": "", "track": "Web, Desktop and Full-Stack Development", "type": "Talk", "language": "en", "abstract": "[Osdag](osdag.fossee.in) is a steel structure design tool intended to comply with Indian standards, in development at IIT Bombay. In this talk I share my experience developing an installation for the same after it has been in stasis for 4-5 years.\r\n\r\nTopics touched include changes in the python ecosystem in this time that affect this tool, conda/pixi packaging and testing.", "description": "1. Introduce Osdag: purpose of software, increasing confidence in steel within India, steel standards covered etc.\r\n2. Describe development scenario and challenges: mainly developed through interns, hadn\u2019t had active development for 5 years. In this time there were drastic changes in python itself as well as dependencies. This led to even the existing installer (with dependencies included) to fail in newer operating systems. The Windows installer itself involved 3 entities (Conda, MikTeX, and Osdag itsef), which wouldn\u2019t always work well.\r\n3. (Re-)building experience: making changes relevant to Python dependencies (e.g. changing all floats to ints for certain PyQt methods) and using modern entry-point based techniques (e.g. relative imports and pyproject.toml); making osdag itself available on Conda.\r\n3.1. Issues with first rebuild: Conda sometimes has issues resolving dependencies (with possible, unreliable workarounds). MikTeX (used to generate reports) has a mind of its own.\r\n4. Current build approach and plans: Pixi to ease conda build and lock dependency versions; one click installer for windows including own LaTeX distribution; move from PyQt5; more robust testing framework; UI improvements\r\n5. Gain wisdom about next steps and invite contributions: Any first opinions (part of Q&A or offline chat); Internships and other contribution options for students; Open positions (depending on situation at time of talk) for professionals; screening task based application for recruitment", "recording_license": "", "do_not_record": false, "persons": [{"guid": "c83a7584-923e-541c-a52e-fb0eba3fb81d", "id": 90, "code": "HU9JVR", "public_name": "Ajinkya P. Dahale", "avatar": null, "biography": "A mechanical engineer by training, I am now a software developer based in India, currently working as a project staff at IIT Bombay, Mumbai. I have been a contributor to FreeCAD since 2016.\r\n\r\nIn FreeCAD, my focus has been mostly in the 2D constrained drawing workbench \u201cSketcher\u201d, as well as the underlying solver \u201cplanegcs\u201d. In further detail, my interest has been in adding support for general curved geometry.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/DRPUYA/", "id": 240, "guid": "dfba90cc-0b84-5be2-90fe-d4948d707616", "date": "2025-09-14T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 2", "slug": "2025-240--hope-hesitation-and-hello-world-a-girl-s-path-from-confusion-to-clarity", "title": "'Hope, Hesitation and Hello World' : A Girl's Path from Confusion to Clarity", "subtitle": "", "track": "Community", "type": "Talk", "language": "en", "abstract": "Everyone talks about the black and white of being in tech,but not the grey-where you are stuck,overwhelmed and confused.I\u2019ll walk you through how I went from copy-pasting the code to creating code,and how i found clarity, not by mastering syntax, but mindset. If you\u2019ve ever felt lost,this talk is for you.", "description": "1)Introduction + Personal story - 4 minutes\r\n      \u25cfWho I am\r\n      \u25cfHow did i start my journey \r\n      \u25cfThe emotional dilemma i faced \r\n        as a beginner\r\n      \u25cfHow I got clarity\r\n\r\n2)The struggle of starting in Tech -  3 minutes\r\n      \u25cfThe endless sea of resources\r\n      \u25cfThe social pressure\r\n      \u25cfThe fear of not being good \r\n        enough\r\n\r\n3)Lessons you learn - 4 minutes\r\n      \u25cfEveryone has their own pace.\r\n      \u25cfCopying code is tempting but \r\n        not the right thing to do.\r\n      \u25cfComparison with others doesn\u2019t \r\n        solve problems.\r\n      \u25cfEndless Tutorials are a trap\r\n\r\n4)Roadmap for starting in Tech - 8 minutes\r\n      \u25cfIdentifying what you enjoy\r\n      \u25cfChoosing the right resources\r\n      \u25cfCreating your own learning plan \r\n        and not just following others\u2019\r\n\r\n5)The mindset change - 6 minutes\r\n      \u25cfProgress matters more than \r\n        pace.\r\n      \u25cfEmbracing your pace\r\n      \u25cfBuilding self-confidence on your \r\n        coding abilities\r\n      \u25cfSelf-Motivation\r\n\t\r\n6)Q & A - 5 minutes\r\n      \u25cfOpen floor for queries.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "dd3731c0-2793-5a58-9985-10c4207edca7", "id": 207, "code": "978RPU", "public_name": "Heer Thakkar", "avatar": null, "biography": "Hi! I am Heer, a 16-year-old self taught python developer and an applied AI developer. I am currently pursuing a diploma in computer engineering from Parul University.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Track 3": [{"url": "https://cfp.in.pycon.org/2025/talk/VVR8BD/", "id": 206, "guid": "d34b9f2a-7851-57c6-b70e-7aa716366df2", "date": "2025-09-14T10:10:00+05:30", "start": "10:10", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-206-python-and-music-building-a-music-tutor", "title": "Python and Music: Building a Music Tutor", "subtitle": "", "track": "Python for Hardware, Edge Computing, IoT", "type": "Talk", "language": "en", "abstract": "We\u2019ve all had that moment \u2014 sitting at a keyboard, fingers frozen, wondering where to even begin. The dream of playing music lives in many of us, but the reality? Long workdays, unpredictable schedules, uninspiring lessons, and slow progress often extinguish the spark before it can catch fire.\r\n\r\nWhat if technology could change that?\r\n\r\nThis project combines Python, Deep Learning, and Music Theory with a custom hardware setup to create an intelligent and engaging virtual music tutor. Currently designed for keyboards and electric pianos, the system visualizes songs, guides your practice sessions, and adapts to your skill level \u2014 making music learning more intuitive, flexible, and enjoyable.", "description": "Overview - \r\nPicture this: you hear a song you love and think, \u201cI wish I could play that.\u201d With this tool, you can.\r\n\r\nYou start by uploading or recording the song. The system quickly analyzes the audio and reveals the notes and patterns behind the music. Your keyboard lights up with each note, guiding your hands as you play along. No sheet music, no complicated theory \u2014 just you, your instrument, and the music you already love.\r\n\r\nAs you continue learning, the system adjusts to your pace. It gradually introduces new concepts \u2014 like chords, scales, and harmony \u2014 woven naturally into the songs you're learning. You can slow things down, loop tricky sections, or challenge yourself with more complex arrangements as you grow.\r\n\r\nWhether you're picking up the keyboard for the first time or returning after years away, this project transforms learning into a hands-on, personalized experience. By combining smart technology with the joy of real music, we aim to help people practice, play, explore, and fall in love with learning again.\r\n\r\nOutline of the Talk - \r\n1. Introduction \u2013 Challenges in learning music and how this system addresses them\r\n2. Extraction \u2013 Analyzing and separating song layers using deep learning\r\n3. Theorization \u2013 Applying music theory to generate playable, structured lessons\r\n4. UI Presentation \u2013 A MIDI-based interface for interacting with lessons of varying complexity, including theory and play modes\r\n5. Hardware Visualization \u2013 LED-strip visualizer to gamify practice sessions with real-time feedback\r\n6. End Result \u2013 Demo video showcasing the complete learning experience\r\n\r\nTech Stack -\r\nPython, React, Deep Learning, Raspberry Pi (or similar)\r\n\r\nSpeaker Info - \r\nAnant Gupta \u2013 Applied AI/ML Lead, passionate about exploring innovative ideas and hands-on hardware experimentation.\r\nLakshya Gupta \u2013 Software Engineer with a passion for music, piano, and the creative applications of AI.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "f8bff200-bb65-55d0-ac87-f8da317e7797", "id": 187, "code": "3WDZRP", "public_name": "Lakshya Gupta", "avatar": null, "biography": "Software Engineer at JP Morgan Chase\r\nUndergraduate in Computer Science and Engineering from IIT (BHU), Varanasi, 2021\r\n\r\nBackground in ML/AI, Deep Learning, and IDP, trained in both Hindustani Classical and Western Classical Music (Instrumental)", "answers": []}, {"guid": "556ecc15-287f-5c6f-9b1b-f58032a76439", "id": 196, "code": "QWJNMC", "public_name": "Anant Gupta", "avatar": null, "biography": "I am a technologist who enjoys finding and solving problems. I believe that Hardware, Software, Backend, Frontend are all abstractions and one should not limit your scope to just a small vertical\r\n\r\nI have around 14 years of experience dabbling with various types of techstack", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/WQQQM7/", "id": 252, "guid": "1a9e44d0-a4a0-55a7-8c94-fb16daa76da4", "date": "2025-09-14T10:50:00+05:30", "start": "10:50", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-252-evals-first-code-later-a-practical-guide-to-evaluations-rerankers-caches", "title": "Evals First, Code Later: A Practical Guide to Evaluations, Rerankers & Caches", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Many retrieval-augmented generation (RAG) and code-search pipelines rely on ad-hoc checks and break when deployed at scale.\r\n\r\nThis talk presents an evaluation-first development workflow applied to a production code-search engine built with Python, PostgreSQL (pgvector), and OpenAI rerankers. Introducing automated evaluation suites before optimisation cut average query latency from 20 min to 30 s, delivered a 40 \u00d7 speed-up, and raised relevance by \u2248 30 %. We will cover:\r\n\r\n- Constructing task-specific evaluation datasets and metrics\r\n- Hybrid (lexical + ANN) retrieval \r\n- Cross-encoder reranking for precision boosts\r\n- Semantic caching strategies that keep indexes fresh and queries fast\r\n\r\nThe session includes benchmark results, a live demonstration, and an MIT-licensed reference implementation that attendees can clone and extend.", "description": "| Time      | Section                                                 |\r\n| --------- | ------------------------------------------------------- |\r\n| 0\u20133 min   | **Introduction** |\r\n| 3\u20136 min   | **Why Evals First**: avoiding invisible failures       |\r\n| 6\u20139 min   | **Chunking strategies**: myths, length / overlap, heuristics, & findings   |\r\n| 9\u201312 min  | **Hybrid retrieval**: BM25 + ANN + score fusion        |\r\n| 12\u201316 min | **Rerankers**: what works, when, and why               |\r\n| 16\u201319 min | **Semantic caching**: avoid redundant computation, stay fresh         |\r\n| 19\u201323 min | **Live demo**: see relevance jump.        |\r\n| 23\u201325 min | **Cheatsheet + Repo walkthrough**                       |\r\n| 25\u201330 min | **Q\\&A**                                                |", "recording_license": "", "do_not_record": false, "persons": [{"guid": "d15ef63f-819d-5b61-acdf-a4286397ac6b", "id": 220, "code": "VDYJHY", "public_name": "Saksham Aggarwal", "avatar": null, "biography": "**Saksham Aggarwal** is a founder and engineer building AI agents that automate engineering grunt work, starting with SDK integrations so that product teams can move faster.  \r\n\r\nHe was the **#1 engineer / founding member** at PYOR, a Castle Island\u2013backed financial data startup, where he built an enterprise data terminal for on-chain analytics.  \r\n\r\nSaksham has also driven growth at **Flint (now LogX)** and scaled **Conquest**, India\u2019s largest student-run startup accelerator.  \r\n\r\nHe\u2019s passionate about:  Agentic retrieval systems, Programmable prompts, Evals (*Text/Image/Video*), Interaction design, and Synthetic data pipelines.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/U3TRT9/", "id": 33, "guid": "67f10d93-9340-528f-9ff6-b3a2676097da", "date": "2025-09-14T11:30:00+05:30", "start": "11:30", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-33-understanding-plugin-architecture-for-python-packages", "title": "Understanding Plugin Architecture for Python Packages", "subtitle": "", "track": "Python Core, Performance", "type": "Talk", "language": "en", "abstract": "Ever wondered how we do a pip install for a custom dialect in SQLAlchemy and it's create_engine is automagically able to decode the corresponding engine through the protocol declared in the connection URI ? In this talk we will uncover how plugin functionality works in Python by exploring SQLAlchemy's dialect plugins and how you can use similar methods for creating your own pluggable python package.", "description": "1. A quick look at SQLAlchemy dialects [7m]\r\n- Explaining the concept of \"dialects\" in SQLAlchemy: Each database backend (e.g., PostgreSQL, MySQL, SQLite) is supported through a dialect. These dialects determine how SQLAlchemy communicates with various databases.\r\n- Highlighting how dialects allow SQLAlchemy to work seamlessly with different databases by specifying backend-specific behavior, like query translation and connection management. \r\n- Highlight how this has allowed SQLAlchemy to stay extensible despite newer databases being released frequently.\r\n\r\n2. Exploring create_engine [3m]\r\n- Give a quick walkthrough of relevant code parts from SQLAlchemy codebase that give an idea about how create_engine is working.\r\n\r\n3. Python package entrypoints [3m]\r\n- How setup.py entrypoints can be configured to tell information about your package to other packages.\r\n- How entrypoints can be defined in pyproject.toml as well\r\n\r\n4. Exploring importlib.metadata [2m]\r\n- How we can read the information shared by other packages\r\n\r\n5. The hello world python package [2m]\r\n- Create a dummy python package that creates a cli that writes \"Hello world!\" in the language specified by --language argument.\r\n\r\n6. Creating plugin structure and loader utils [5m]\r\n- Setup base framework for allowing loading of language plugins\r\n\r\n7. Extending hello world python package with hello-world-kannada-plugin [3m]\r\n- Create a plugin package based on the plugin spec defined for hello-world plugins\r\n- Install it and demonstrate how now users can print \"Hello world!\" in kannada too !\r\n\r\n8. Conclusion [2m]\r\n- Summarize how plugin structure can enable creating massively extensible plugins.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "d38b7f3f-9d4b-52f8-80b4-1bc67f609bfe", "id": 33, "code": "RRCJYF", "public_name": "Ashish Shukla", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/7E99T8/", "id": 318, "guid": "65d71ce0-5973-58e4-9c7d-bcbf4f5f551e", "date": "2025-09-14T12:10:00+05:30", "start": "12:10", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-318-geometry-of-efficient-fine-tuning-lora-intrinsic-dimension-subspace-learning", "title": "Geometry of Efficient Fine Tuning: LoRA, Intrinsic Dimension & Subspace Learning", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Large pre-trained models are now the norm, making Parameter-Efficient Fine-Tuning techniques like LoRA essential to reduce computational and storage costs. But why do these methods work so well? This talk explores the theory of Intrinsic Dimension (ID)\u2014the idea that neural networks often need far fewer effective directions to learn a task than their total parameters suggest.\r\n\r\nWe\u2019ll estimate a task\u2019s ID via random subspace training on an MLP for MNIST, reproducing results from foundational papers. Then, we\u2019ll compare how LoRA approximates subspace training in compute, training time, and accuracy\u2014clarifying key design trade-offs. LoRA succeeds not just from engineering but by exploiting the low-dimensional structure revealed by ID.\r\n\r\nWe also highlight PyTorch internals that enable flexible subspace training. This talk builds on a four-part blog series bridging theory and engineering.", "description": "1. Motivation & Background\r\nThe rise of PEFT in the large model era: Why full fine-tuning is wasteful.\r\nThe role of LoRA as a scalable, resource-friendly alternative.\r\nIntroducing Intrinsic Dimension (ID): Why models often don\u2019t need all their parameters.\r\n\r\n2. Subspace Training for Measuring ID\r\nIntrinsic Dimension of a task and its implications.\r\nHands-on walkthrough: Measuring ID using random subspace training on an MLP for MNIST.\r\nReproducing results from original ID literature.\r\n\r\n3. LoRA as a Subspace Method\r\nMatching LoRA\u2019s parameter budget to subspace dimensions.\r\nCompare LoRA vs. subspace training in FLOPs, convergence speed, accuracy.\r\n\r\n4. PyTorch Internals\r\nHow _nn.Parameter_ allows selective fine-tuning.\r\nUsing _register_buffer_ for fixed subspace bases.\r\nCustom _forward()_ logic to implement dynamic re-parameterization.\r\nWhy such flexibility is hard in static-graph frameworks.\r\n\r\n5. Key Takeaways\r\nID gives a principled lens to understand PEFT.\r\nLoRA can be seen as a constrained subspace optimizer.\r\nSubspace experiments offer a tool to reason about model capacity and fine-tuning efficiency.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "9fa3e4e7-ee8b-511a-8f72-a9b8a0433b55", "id": 258, "code": "7XZR8J", "public_name": "Preethi Srinivasan", "avatar": null, "biography": "Preethi has an MS (by Research) from IIT Mandi and her thesis focused on Computer Vision specifically medical image post-processing. She is the first author on publications at ACCV, WiML, and IEEE CBMS. At Sahaj, she has built ML prototypes for video understanding, LLM fine-tuning, and RAG-based QA systems. Authored a blog series on LoRA and Intrinsic Dimension, which led to speaking engagements at PyCon India 2024 and The Fifth Elephant 2025.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/SDPA9X/", "id": 82, "guid": "5a6394a5-7e7b-542e-8472-f4501eecdfc0", "date": "2025-09-14T14:50:00+05:30", "start": "14:50", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-82-green-ai-at-scale-energy-efficient-llm-serving-using-vllm-llm-compressor", "title": "Green AI at Scale: Energy-Efficient LLM Serving using vLLM & LLM Compressor", "subtitle": "", "track": "Others", "type": "Talk", "language": "en", "abstract": "LLMs like GPT-4 can consume as much energy per query as an entire web search session. What if we could cut that with python powered vLLM? In this session, we'll explore how vLLM, a Python-powered, high-throughput inference engine, enables green AI deployment by drastically improving GPU efficiency. We'll cover techniques like PagedAttention, continuous batching, and speculative decoding, showing how they reduce latency, memory overhead, and energy usage per token. Additionally, we'll dive into the role of the LLM Compressor, a lightweight compression framework that shrinks model size while preserving accuracy\u2014further slashing inference costs and power consumption. If you're interested in sustainable LLM deployment, GPU optimization, or how Python can lead the charge in green computing, this talk is for you.", "description": "1. Intro: Why LLM Inference Needs to Go Green\r\n    - Rising cost of serving models like LLaMA, Mistral, and GPT-family.\r\n    - Environmental & energy concerns of always-on inference systems.\r\n\r\n2. Enter vLLM: A Python-Based, Efficient LLM Serving Engine\r\n     - Quick intro to vLLM and its architecture.\r\n     - How Python + CUDA-backed C++ kernels power it under the hood.\r\n\r\n3. Core Innovations That Reduce Energy Footprint\r\n     - PagedAttention: Minimizing GPU memory fragmentation.\r\n     - Speculative Decoding: Fewer wasted compute cycles.\r\n     - Continuous Batching: Maximizing throughput without GPU idle time.\r\n\r\n4. LLM Compressor: Lightweight Models for Sustainable Inference\r\n     - Introduction to LLM Compressor: Architecture-agnostic model shrinking without affecting the accuracy.\r\n     - Real-world impact: Lower power usage, smaller carbon footprint, and latency gains.\r\n\r\n4. Benchmark: Performance vs. Energy Trade-offs\r\n    - Real-world comparison: vLLM vs HuggingFace Transformers\r\n    - Metrics: Throughput (tokens/sec), latency, memory usage, and energy draw (watts per token)\r\n    - Demo: Live side-by-side inference demo showcasing identical model runs across vLLM and HuggingFace on the same GPU. \r\n\r\n5. Deployment Patterns for Sustainable Inference\r\n     - Quantization tips.\r\n\r\n6. Closing Thoughts\r\n     - Why Python is still central to sustainable ML.\r\n     - Practical takeaways for engineers looking to scale responsibly.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "58c036f1-5041-5811-b4cb-035170758ead", "id": 71, "code": "SE8K9J", "public_name": "Abhijit Roy", "avatar": null, "biography": "I\u2019m a Software Maintenance Engineer with a focus on quantization and fine-tuning large language models (LLMs). I work with tools and frameworks like vLLM, LLM Compressor, InstructLab, and RHEL AI to optimize and maintain high-performance AI systems.\r\nMy work revolves around making LLMs more efficient, scalable, and adaptable for real-world use cases\u2014whether it\u2019s reducing inference costs, enhancing model alignment, or supporting enterprise-grade AI deployments.", "answers": []}, {"guid": "deb9fc8e-bf2d-5490-be69-04c0f1cc8c48", "id": 72, "code": "HQYQVZ", "public_name": "Anindita Sinha Banerjee", "avatar": null, "biography": "With over a decade in Data and Decision Sciences, I design NLP and AI solutions that solve complex business challenges. Currently a Data Scientist at Red Hat and former researcher at Tata Research Development and Design Center, I have presented research at premier conferences and hold patents, advancing AI-driven innovations. Explore my Google Scholar page -https://scholar.google.com/citations?user=5GCQcVkAAAAJ&hl=en&oi=ao", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/TK9ULJ/", "id": 189, "guid": "fab4742b-aabd-5111-8709-97003f68a6bd", "date": "2025-09-14T15:30:00+05:30", "start": "15:30", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-189-celery-and-kubernetes-for-a-fast-scalable-and-robust-workflow-orchestration", "title": "Celery and kubernetes for a fast, scalable and robust workflow orchestration", "subtitle": "", "track": "Python for Cloud, DevOps, Infrastructure", "type": "Talk", "language": "en", "abstract": "## Can Celery do more than just background tasks? Absolutely.\r\n\r\nIn this session, I'll share a real-world use case where we transformed Celery into a full-fledged workflow orchestrator \u2014 handling serial and parallel task execution, task retries, dynamic routing, and queue management \u2014 all running at scale on Kubernetes.\r\n\r\nPaired with K8s' elasticity and Celery's simplicity, this setup replaced a slower, costlier serverless architecture built on AWS Lambda and Step Functions. You\u2019ll learn how Celery\u2019s canvas patterns, task routing, and worker isolation let us orchestrate complex ML pipelines efficiently, and why it's still a powerful, underappreciated tool for scalable, production-grade systems.\r\n\r\nIf you're tired of serverless trade-offs and want more control without giving up scalability, this talk is for you.", "description": "## Session Outline\r\n\r\n### 1. The humble beginnings: Celery for background tasks\r\nWe\u2019ll start by revisiting what Celery was originally designed for \u2014 lightweight background task processing in Django apps. From sending emails to exporting reports, it has quietly powered asynchronous workloads in Python for years.\r\n\r\n### 2. Why background jobs weren\u2019t enough: the need for orchestration\r\nAs systems evolved, so did complexity. We needed more than just fire-and-forget background jobs \u2014 we needed workflows. I\u2019ll explain how this need led us to explore Celery beyond its original use case.\r\n\r\n### 3. Celery as a workflow orchestrator: a real-world alternative to Airflow and Step Functions\r\nWe'll walk through how Celery became our production-grade orchestrator \u2014 orchestrating multi-stage pipelines that would typically be handled by tools like Airflow or AWS Step Functions. This shift allowed us to unify orchestration and task execution in one codebase.\r\n\r\n### 4. Canvas workflows: chaining, grouping, and retrying tasks the Celery way\r\nCelery\u2019s `canvas` API offers a powerful set of tools for composing workflows: task chaining, grouping, nesting, automatic retries, named tasks, and even routing. These building blocks let us express complex business logic with clean, readable code.\r\n\r\n### 5. Optimizing for scale: deploying Celery on Kubernetes\r\nTo handle real-world scale, we containerized our Celery workers and deployed them on Kubernetes. This gave us full control over resource allocation \u2014 CPU, RAM, and scaling policies \u2014 per worker type, tailored to the tasks they run.\r\n\r\n### 6. Speeding things up: choosing the right concurrency model\r\nCelery supports multiple worker types like prefork, gevent, and eventlet. We\u2019ll break down how we selected the right worker model (CPU-bound vs I/O-bound) to optimize latency and throughput for different stages of our pipeline.\r\n\r\n### 7. Real-time data and ML: pandas operations and model inference at scale\r\nOur workflows included pandas-heavy data transformations and ML inference. Running these in Celery workers on Kubernetes let us cache models locally, improve performance, and reduce overhead \u2014 all while staying fully asynchronous.\r\n\r\n### 8. Observability matters: logging, monitoring, and debugging\r\nCelery offers pre-run and post-run hooks for injecting custom logic \u2014 perfect for adding instrumentation. We combined this with the EFK (Elasticsearch, Fluentd, Kibana) stack to gain deep insights into task behavior and failures across our cluster.\r\n\r\n### 9. Cutting down cloud cost: goodbye Lambda, Step Functions, and CloudWatch\r\nBy moving off the serverless stack (AWS Lambda + Step Functions + CloudWatch), we saved significantly on cost while gaining greater control, faster execution times, and easier debugging in local and staging environments.\r\n\r\n### 10. Cloud-agnostic deployment: freedom to run anywhere\r\nBecause our solution runs entirely on Kubernetes with open-source tools, it's fully cloud-agnostic. Whether you're on AWS, GCP, Azure, or even on-prem \u2014 this architecture scales with you, without vendor lock-in.\r\n\r\n### Conclusion: Celery \u2014 simple, powerful, production-grade\r\nCelery is often underestimated as \u201cjust\u201d a background task tool. But when paired with Kubernetes and used thoughtfully, it becomes a scalable, modular workflow engine. This talk is about pushing Python infrastructure further \u2014 proving that with the right setup, even traditional tools like Celery can scale with modern engineering demands.\r\n\r\n---\r\n\r\nAttendees will walk away with actionable insights, deployment strategies, and architectural patterns for using Celery and Kubernetes to build fast, cost-efficient, and scalable data or ML pipelines in production.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "feb928ac-204f-5152-b574-deee6f2b1ed8", "id": 173, "code": "3NJXXL", "public_name": "Param Rajani", "avatar": null, "biography": "**Param Rajani** is a Software Engineer at GoDaddy with around 3 years of experience working in startups as a Data Engineer and later promoted to Senior Data Engineer. \r\nHis expertise lies in building scalable workflows on both serverless and Kubernetes platforms, having spearheaded product deployments in these domains. Param has witnessed the best and worst of scaling challenges, designing systems on Kubernetes and AWS, optimizing existing architectures, and crafting maintainable codebases. He brings hands-on experience with Python, Kubernetes, and a wide range of AWS cloud services\u2014all achieved at an early stage in his career.\r\n\r\nConnect with Param on [LinkedIn](https://www.linkedin.com/in/param-rajani)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://cfp.in.pycon.org/2025/talk/ACBYVT/", "id": 248, "guid": "8107dc23-64e1-5bd6-bb7c-793a0d629458", "date": "2025-09-14T16:20:00+05:30", "start": "16:20", "logo": null, "duration": "00:30", "room": "Track 3", "slug": "2025-248-rags-to-riches-efficient-webchatbot-with-async-scraping-hybrid-re-ranking", "title": "RAGs to Riches: Efficient WebChatbot with Async Scraping & Hybrid Re-Ranking", "subtitle": "", "track": "AI, ML, Data Science", "type": "Talk", "language": "en", "abstract": "Building efficient RAG chatbots, especially with complex data, presents bottlenecks. This talk shares our use case demonstrating how 4 core innovations achieved significant performance gains:\r\n1. **Accelerated Ingestion:** `asyncio` reduced website crawl time from 5h 18m to just 40m achieving a >9x speedup.\r\n2. **Complex Data Handling:** _Multi-Modal Chunking_ enables seamless ingestion of documents with intricate text, images, and tables.\r\n3. **Improved Retrieval:** _Hybrid Re-Ranking_ (considering website metrics) ensures more efficient and relevant information retrieval.\r\n4. **Optimized Responses:** Classifying and rephrasing user queries generates concise, context-aware responses with minimal tokens/latency.\r\nThese integrated strategies resulted in a highly performant and valuable RAG chatbot.", "description": "### Description:\r\n---\r\n\r\nStruggling to build RAG chatbots that are fast, accurate, *and* can handle complex documents containing images and tables? Traditional RAG pipelines often hit bottlenecks in data ingestion and retrieval efficiency, leading to slow updates, irrelevant responses, and high token costs.\r\n\r\nThis talk unveils a robust framework for building high-efficiency chatbots using Retrieval-Augmented Generation (RAG) with a hybrid re-ranking strategy, demonstrated through a real-world use case. We'll showcase innovations across the pipeline:\r\n\r\n*   **Accelerating Data Ingestion:** See how our `asyncio`-powered scraper processes websites concurrently, dramatically reducing crawl time by over **9\u00d7 (5h 18m \u2192 40m)**.\r\n*   **Handling Complex Documents:** Learn our **Multi-Modal Chunking** technique for seamlessly ingesting documents containing intricate text, images, and tables, preparing them effectively for RAG.\r\n*   **Optimizing Query Workflow:** Understand how classifying and rephrasing user queries improves the initial retrieval stage for better relevance.\r\n*   **Implementing Hybrid Re-Ranking:** Dive into our core **Hybrid Re-Ranking** mechanism that combines semantic relevance with structural metadata (like site depth and authority) to surface the most pertinent passages from potentially noisy initial search results.\r\n*   **Building the Full Pipeline:** Get a clear, step-by-step blueprint for integrating these techniques to minimize token usage, accelerate response times, and consistently deliver precise, context-aware answers.\r\n\r\nAttendees will leave with practical insights and a framework to significantly enhance the performance and capability of their own RAG implementations.\r\n\r\n### Session Outline:\r\n---\r\n\r\n*   **Introduction & Motivation (1 min)**\r\n    *   Challenges with traditional chatbots: high token usage, latency, generic responses\r\n    *   Objectives: boosting efficiency and accuracy with RAG + re-ranking\r\n\r\n*   **Standard RAG Pipeline Overview (3 min)**\r\n    *   Chunk \u2192 embed \u2192 vector store\r\n    *   Document-type chunking (HTML vs. PDF) and multi-modal ingestion of images/tables\r\n\r\n*   **Web Scraping Abstraction (5 min)**\r\n    *   Async scheduler-driven graph traversal over a website\u2019s HTML & PDF content. (9\u00d7 faster compared to synchronous scraping: 5 h 18 m \u2192 40 m)\r\n    *   Parsing dynamic webpages and complex PDFs, containing images and tables, and extracting content.\r\n    *   Key metadata captured (crawl depth, doc type, nav hierarchy)\r\n\r\n*   **Enhanced LLM Interaction Workflow (5 min)**\r\n    *   Classifying queries (gibberish, general chat, site-specific)\r\n    *   Rewriting into semantically rich variants for broader recall\r\n\r\n*   **Hybrid Re-Ranking Strategy (5 min)**\r\n    *   Scoring snippets by semantic relevance, page-level weight, domain authority\r\n    *   Applying weighted formula (\u03b1, \u03b2, \u03b3) to surface the most pertinent chunks\r\n\r\n*   **Comparison: Traditional vs. Our RAG-Driven Approach (3 min)**\r\n    *   Traditional: raw LLM calls \u2192 token bloat, context loss \r\n    *   Ours: RAG + hybrid re-ranking \u2192 targeted retrieval, cost-effective precision \r\n\r\n*   **Demonstration & Insights (3 min)**\r\n    *   End-to-end flow: user query \u2192 initial search \u2192 re-ranking \u2192 final LLM answer\r\n    *   Tips on balancing accuracy, latency, and token budget\r\n\r\n*   **Conclusion & Q&A (5 min)**\r\n    *   Applying this pipeline in your own projects\r\n    *   Open floor for questions and future directions\r\n\r\n### Prerequisites:\r\n---\r\n\r\nAttendees should have a basic understanding of:\r\n\r\n*   Python 3.8+ and familiarity with `asyncio` for concurrent programming.\r\n*   Large Language Models (LLMs) and text embeddings.\r\n*   Experience with vector databases (e.g., Pinecone, FAISS) or general retrieval systems.\r\n*   General familiarity with REST APIs and prompt engineering best practices.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "12f308e2-bbed-52dc-b60e-925b57ea1e5f", "id": 216, "code": "GD7PSS", "public_name": "Charan Teja C S", "avatar": null, "biography": "### Charan Teja C S\r\n\r\n**AI/ML Engineer, OSI Digital**\r\n\r\nCurrently designing and building Python FastAPI backends and AI/ML-driven solutions, Charan is a language-independent developer who tackles problems with a fundamentals-first mindset.\r\nA graduate of Osmania University (B.E. CSE), he\u2019s active in competitive programming and, during an internship, developed a face-recognition module.\r\nHis academic capstone\u2014a FastAPI-powered robotic greenhouse monitor using ML for leaf-disease detection\u2014demonstrated his full-stack and AI expertise.\r\nAt OSI Digital, Charan has delivered 2 highly praised chatbots (HR policy and website inquiry), holds AWS certifications with Docker deployment experience, and continues to deepen his strengths in **AI/ML** and **cloud computing**.", "answers": []}, {"guid": "ae411483-6a8b-5ebf-9fc0-d96929594715", "id": 318, "code": "ZVWENU", "public_name": "Srikanth Doddi", "avatar": null, "biography": "**Architect | Product Manager | Engineering Leader | AI**\r\n\r\n**Srikanth** is an Architect, Product Manager, and Engineering Lead at [OSI Digital Pvt Ltd](https://www.osidigital.com)\r\n\r\nHe leads an exceptional team of 20 engineers, crafting innovative solutions that shape the future, one project at a time.\r\n\r\n**What I Do:**\r\n\r\nAs an **Architect** and **AI Innovator**, I specialize in turning ideas into scalable, cutting-edge solutions across **AWS**, **Azure**, and **GCP**. From building microservices and cloud-native systems to powering real-time data streams with **NodeJS**, **Python**, and **AWS IoT Core**, I bring tech to life.\r\n\r\n**AI** is my playground \u2013 whether it's **AWS Rekognition**, **Google Vision AI**, or **GenAI**, I\u2019m constantly designing smarter, more intuitive technologies.\r\n\r\nLeading a team of talented engineers, I\u2019m dedicated to **mentoring**, **empowering**, and delivering high-impact results. Whether it\u2019s creating sleek apps with **React**, **Angular**, and **Ionic**, or building interactive chatbots using **DialogFlow** and **Watson**, I\u2019m always pushing the boundaries of what\u2019s possible.\r\n\r\n---\r\n\r\nLet\u2019s connect and build something extraordinary \u2013 [srikanth.cloudarch@gmail.com](mailto:srikanth.cloudarch@gmail.com)\r\nExplore more about our work at [OSI Digital Pvt Ltd](https://www.osidigital.com)", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 4, "date": "2025-09-15", "day_start": "2025-09-15T04:00:00+05:30", "day_end": "2025-09-16T03:59:00+05:30", "rooms": {}}]}}}